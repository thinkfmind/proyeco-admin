[{"/Users/augusto/Desktop/proyeco-front/src/index.js":"1","/Users/augusto/Desktop/proyeco-front/src/reportWebVitals.js":"2","/Users/augusto/Desktop/proyeco-front/src/App.js":"3","/Users/augusto/Desktop/proyeco-front/src/redux/store.js":"4","/Users/augusto/Desktop/proyeco-front/src/routes/privateRouter.js":"5","/Users/augusto/Desktop/proyeco-front/src/views/equipment/details.js":"6","/Users/augusto/Desktop/proyeco-front/src/views/equipment/disponibility.js":"7","/Users/augusto/Desktop/proyeco-front/src/views/equipment/tablaGerencia.js":"8","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/createEmpresa.js":"9","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/create.js":"10","/Users/augusto/Desktop/proyeco-front/src/views/equipment/edit.js":"11","/Users/augusto/Desktop/proyeco-front/src/views/equipment/search.js":"12","/Users/augusto/Desktop/proyeco-front/src/views/equipment/create.js":"13","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/historic/create.js":"14","/Users/augusto/Desktop/proyeco-front/src/views/equipment/list.js":"15","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/edit.js":"16","/Users/augusto/Desktop/proyeco-front/src/views/trash/empresa.js":"17","/Users/augusto/Desktop/proyeco-front/src/views/alerts/create.js":"18","/Users/augusto/Desktop/proyeco-front/src/views/alerts/history.js":"19","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/historic/edit.js":"20","/Users/augusto/Desktop/proyeco-front/src/views/equipment/index.js":"21","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/index.js":"22","/Users/augusto/Desktop/proyeco-front/src/views/trash/index.js":"23","/Users/augusto/Desktop/proyeco-front/src/views/home/index.js":"24","/Users/augusto/Desktop/proyeco-front/src/views/users/index.js":"25","/Users/augusto/Desktop/proyeco-front/src/views/login/index.js":"26","/Users/augusto/Desktop/proyeco-front/src/config.js":"27","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/table.js":"28","/Users/augusto/Desktop/proyeco-front/src/redux/ducks/user.js":"29","/Users/augusto/Desktop/proyeco-front/src/helpers/chart.js":"30","/Users/augusto/Desktop/proyeco-front/src/hooks/useOrderTable.js":"31","/Users/augusto/Desktop/proyeco-front/src/helpers/table.js":"32","/Users/augusto/Desktop/proyeco-front/src/hooks/useFetch.js":"33","/Users/augusto/Desktop/proyeco-front/src/helpers/string.js":"34","/Users/augusto/Desktop/proyeco-front/src/views/equipment/tablas/gerencia.js":"35","/Users/augusto/Desktop/proyeco-front/src/components/tableOrderPagination.js":"36","/Users/augusto/Desktop/proyeco-front/src/views/trash/table.js":"37","/Users/augusto/Desktop/proyeco-front/src/components/alert/row.js":"38","/Users/augusto/Desktop/proyeco-front/src/components/form/textInput/datalist.js":"39","/Users/augusto/Desktop/proyeco-front/src/components/home/equipo/description.js":"40","/Users/augusto/Desktop/proyeco-front/src/components/users/table/equipos.js":"41","/Users/augusto/Desktop/proyeco-front/src/components/alert/index.js":"42","/Users/augusto/Desktop/proyeco-front/src/components/form/textInput/index.js":"43","/Users/augusto/Desktop/proyeco-front/src/components/form/numberPick/index.js":"44","/Users/augusto/Desktop/proyeco-front/src/components/form/itemSelectorWithIcon/index.js":"45","/Users/augusto/Desktop/proyeco-front/src/components/form/itemSelector/index.js":"46","/Users/augusto/Desktop/proyeco-front/src/@app/navbar/index.js":"47","/Users/augusto/Desktop/proyeco-front/src/hooks/usePagination.js":"48","/Users/augusto/Desktop/proyeco-front/src/helpers/staticData.js":"49","/Users/augusto/Desktop/proyeco-front/src/helpers/equipment.js":"50","/Users/augusto/Desktop/proyeco-front/src/views/equipment/tablas/row.js":"51","/Users/augusto/Desktop/proyeco-front/src/components/home/equipo/dropzone.js":"52","/Users/augusto/Desktop/proyeco-front/src/containers/home/horizontalList/mod.js":"53","/Users/augusto/Desktop/proyeco-front/src/components/users/table/row.js":"54","/Users/augusto/Desktop/proyeco-front/src/components/users/table/index.js":"55","/Users/augusto/Desktop/proyeco-front/src/@app/navbar/components/organization.js":"56","/Users/augusto/Desktop/proyeco-front/src/@app/navbar/components/gerente.js":"57","/Users/augusto/Desktop/proyeco-front/src/@app/navbar/components/admin.js":"58","/Users/augusto/Desktop/proyeco-front/src/components/home/equipo/index.js":"59","/Users/augusto/Desktop/proyeco-front/src/components/form/passwordInput/index.js":"60","/Users/augusto/Desktop/proyeco-front/src/components/home/estacion/index.js":"61","/Users/augusto/Desktop/proyeco-front/src/components/home/linea/index.js":"62","/Users/augusto/Desktop/proyeco-front/src/components/home/company/index.js":"63","/Users/augusto/Desktop/proyeco-front/src/containers/home/horizontalList/index.js":"64","/Users/augusto/Desktop/proyeco-front/src/helpers/vartiants.js":"65"},{"size":342,"mtime":1638449289480,"results":"66","hashOfConfig":"67"},{"size":362,"mtime":1638449289481,"results":"68","hashOfConfig":"67"},{"size":3648,"mtime":1638449289467,"results":"69","hashOfConfig":"67"},{"size":624,"mtime":1638449289481,"results":"70","hashOfConfig":"67"},{"size":514,"mtime":1638449289481,"results":"71","hashOfConfig":"67"},{"size":1472,"mtime":1638449289483,"results":"72","hashOfConfig":"67"},{"size":9679,"mtime":1638449289483,"results":"73","hashOfConfig":"67"},{"size":2902,"mtime":1638449289483,"results":"74","hashOfConfig":"67"},{"size":15253,"mtime":1638449289482,"results":"75","hashOfConfig":"67"},{"size":13988,"mtime":1638449289481,"results":"76","hashOfConfig":"67"},{"size":20101,"mtime":1638449289483,"results":"77","hashOfConfig":"67"},{"size":5111,"mtime":1638449289483,"results":"78","hashOfConfig":"67"},{"size":19269,"mtime":1638449289483,"results":"79","hashOfConfig":"67"},{"size":11730,"mtime":1638449289482,"results":"80","hashOfConfig":"67"},{"size":2629,"mtime":1638449289483,"results":"81","hashOfConfig":"67"},{"size":16086,"mtime":1638449289482,"results":"82","hashOfConfig":"67"},{"size":3260,"mtime":1638449289484,"results":"83","hashOfConfig":"67"},{"size":10293,"mtime":1638449289481,"results":"84","hashOfConfig":"67"},{"size":2850,"mtime":1638449289481,"results":"85","hashOfConfig":"67"},{"size":12765,"mtime":1638449289482,"results":"86","hashOfConfig":"67"},{"size":4631,"mtime":1638535177468,"results":"87","hashOfConfig":"67"},{"size":2995,"mtime":1638449289482,"results":"88","hashOfConfig":"67"},{"size":4892,"mtime":1638449289484,"results":"89","hashOfConfig":"67"},{"size":16677,"mtime":1638449289484,"results":"90","hashOfConfig":"67"},{"size":12767,"mtime":1638449289484,"results":"91","hashOfConfig":"67"},{"size":5543,"mtime":1638449289484,"results":"92","hashOfConfig":"67"},{"size":144,"mtime":1638449289479,"results":"93","hashOfConfig":"67"},{"size":5852,"mtime":1638449289482,"results":"94","hashOfConfig":"67"},{"size":1244,"mtime":1638449289481,"results":"95","hashOfConfig":"67"},{"size":7576,"mtime":1638449289480,"results":"96","hashOfConfig":"67"},{"size":1241,"mtime":1638449289480,"results":"97","hashOfConfig":"67"},{"size":271,"mtime":1638449289480,"results":"98","hashOfConfig":"67"},{"size":656,"mtime":1638449289480,"results":"99","hashOfConfig":"67"},{"size":1071,"mtime":1638449289480,"results":"100","hashOfConfig":"67"},{"size":6428,"mtime":1638449289484,"results":"101","hashOfConfig":"67"},{"size":3161,"mtime":1638449289479,"results":"102","hashOfConfig":"67"},{"size":3454,"mtime":1638449289484,"results":"103","hashOfConfig":"67"},{"size":2147,"mtime":1638449289477,"results":"104","hashOfConfig":"67"},{"size":2124,"mtime":1638449289477,"results":"105","hashOfConfig":"67"},{"size":14911,"mtime":1638459083487,"results":"106","hashOfConfig":"67"},{"size":11952,"mtime":1638540581853,"results":"107","hashOfConfig":"67"},{"size":427,"mtime":1638449289476,"results":"108","hashOfConfig":"67"},{"size":1613,"mtime":1638449289477,"results":"109","hashOfConfig":"67"},{"size":652,"mtime":1638449289477,"results":"110","hashOfConfig":"67"},{"size":1155,"mtime":1638449289477,"results":"111","hashOfConfig":"67"},{"size":729,"mtime":1638449289477,"results":"112","hashOfConfig":"67"},{"size":5804,"mtime":1638449289467,"results":"113","hashOfConfig":"67"},{"size":331,"mtime":1638449289480,"results":"114","hashOfConfig":"67"},{"size":281,"mtime":1638449289480,"results":"115","hashOfConfig":"67"},{"size":212,"mtime":1638449289480,"results":"116","hashOfConfig":"67"},{"size":1358,"mtime":1638449289484,"results":"117","hashOfConfig":"67"},{"size":1877,"mtime":1638449289478,"results":"118","hashOfConfig":"67"},{"size":1924,"mtime":1638449289479,"results":"119","hashOfConfig":"67"},{"size":3224,"mtime":1638449289479,"results":"120","hashOfConfig":"67"},{"size":3429,"mtime":1638449289479,"results":"121","hashOfConfig":"67"},{"size":2592,"mtime":1638449289467,"results":"122","hashOfConfig":"67"},{"size":2367,"mtime":1638449289467,"results":"123","hashOfConfig":"67"},{"size":3012,"mtime":1638449289467,"results":"124","hashOfConfig":"67"},{"size":363,"mtime":1638449289478,"results":"125","hashOfConfig":"67"},{"size":1872,"mtime":1638449289477,"results":"126","hashOfConfig":"67"},{"size":1127,"mtime":1638449289478,"results":"127","hashOfConfig":"67"},{"size":1274,"mtime":1638449289478,"results":"128","hashOfConfig":"67"},{"size":1062,"mtime":1638449289478,"results":"129","hashOfConfig":"67"},{"size":3517,"mtime":1638458626468,"results":"130","hashOfConfig":"67"},{"size":667,"mtime":1638449289480,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"lf4lse",{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"134"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"134"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"134"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"134"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"134"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"134"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"134"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"134"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"134"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"134"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"134"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"134"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"134"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"134"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"134"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"134"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"134"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"265","messages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"134"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"/Users/augusto/Desktop/proyeco-front/src/index.js",[],["284","285"],"/Users/augusto/Desktop/proyeco-front/src/reportWebVitals.js",[],"/Users/augusto/Desktop/proyeco-front/src/App.js",[],"/Users/augusto/Desktop/proyeco-front/src/redux/store.js",[],"/Users/augusto/Desktop/proyeco-front/src/routes/privateRouter.js",[],"/Users/augusto/Desktop/proyeco-front/src/views/equipment/details.js",[],"/Users/augusto/Desktop/proyeco-front/src/views/equipment/disponibility.js",[],"/Users/augusto/Desktop/proyeco-front/src/views/equipment/tablaGerencia.js",["286"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { logout } from \"../../redux/ducks/user\";\nimport Navbar from \"../../@app/navbar\";\nimport Table from \"./tablas/gerencia\";\nimport TableOrderPagination from \"../../components/tableOrderPagination\";\nimport useOrderTable from \"../../hooks/useOrderTable\";\nimport { ChevronLeftIcon } from \"@heroicons/react/outline\";\nimport { backendUrl } from \"../../config\";\n\nconst MAX_CANT_ROW = 7;\n\nconst Equipment = () => {\n  const userSelector = useSelector((store) => store.user);\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [pagination, setPagination] = useState(1);\n  const { dataOrdered, sortTable } = useOrderTable({\n    data,\n    initProperty: \"createdAt\",\n  });\n\n  const changeData = (dataLocal) => {\n    setData(dataLocal);\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/equipo`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res.data.filter((equipo) => {\n          return equipo.empresa.id === userSelector.user.id;\n        });\n        setData(result);\n      } else {\n        setData(res.data);\n      }\n\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      if (error.response) {\n        if (error.response.status === 401) {\n          dispatch(logout(history));\n        }\n      }\n    }\n  };\n\n  const newPagination = (newPaginationValue) => {\n    setPagination(newPaginationValue);\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Carga, edición y registro de equipos\" />\n      <div className=\"px-20 pb-10 vp-desktop\">\n        <div className=\"flex justify-end w-full mt-14\">\n          <Link to=\"/home\">\n            <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n          </Link>\n          <Link className=\"font-objetive-medium\" to=\"/home\">\n            Volver\n          </Link>\n        </div>\n        <Table\n          role={userSelector.user.role}\n          data={dataOrdered}\n          pagination={pagination}\n          maxCantRow={MAX_CANT_ROW}\n          changeData={changeData}\n        />\n        <TableOrderPagination\n          pagination={pagination}\n          newPagination={newPagination}\n          cantElements={data.length}\n          maxCantRow={MAX_CANT_ROW}\n          order={{ sortTable, alphabetic: \"name\", date: \"createdAt\" }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Equipment;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/createEmpresa.js",["287","288","289","290"],"import { useEffect, useState, forwardRef } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ChevronLeftIcon, CalendarIcon } from \"@heroicons/react/outline\";\nimport InputDataList from \"../../../components/form/textInput/datalist\";\nimport { useSelector } from \"react-redux\";\nimport NumberPick from \"../../../components/form/numberPick\";\nimport ItemSelectorWithIcon from \"../../../components/form/itemSelectorWithIcon\";\nimport TextInput from \"../../../components/form/textInput\";\nimport Navbar from \"../../../@app/navbar\";\nimport DatePicker from \"react-datepicker\";\nimport Table from \"./table\";\nimport Alert from \"../../../components/alert\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { backendUrl } from \"../../../config\";\n\nconst EquipmentCreate = () => {\n  const userSelector = useSelector((store) => store.user);\n  const [data, setData] = useState([]);\n  const [nameEquipo, setNameEquipo] = useState(\"\");\n  const [nameEquipoError, setNameEquipoError] = useState(false);\n  const [linea, setLinea] = useState(\"\");\n  const [lineaError, setLineaError] = useState(false);\n  const [estacion, setEstacion] = useState(\"\");\n  const [estacionError, setEstacionError] = useState(false);\n  const [empresa, setEmpresa] = useState(\"\");\n  const [empresaId, setEmpresaId] = useState(\"\");\n  const [empresaError, setEmpresaError] = useState(false);\n  const [dataLineas, setDataLineas] = useState([]);\n  const [dataEquipos, setDataEquipos] = useState([]);\n  const [dataEstaciones, setDataEstaciones] = useState([]);\n  const [estado, setEstado] = useState(\"Mantenimiento preventivo\");\n  const [detalle, setDetalle] = useState(\"\");\n  const [dataListEquipo, setDataListEquipo] = useState([]);\n  const [days, setDays] = useState(1);\n  const [detalleError, setDetalleError] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [activityData, setActivityData] = useState([])\n\n  let history = useHistory();\n\n  const onChangeDetalles = (value) => {\n    setDetalle(value);\n    setDetalleError(false);\n  };\n\n  const onChangeNameEquipo = (value) => {\n    setNameEquipo(value);\n    setNameEquipoError(false);\n\n    const result = dataEquipos.filter((equipo) => {\n      return equipo.identificacion === value;\n    });\n\n    setEmpresa(result.length > 0 ? result[0].empresa.name : \"\");\n    setEmpresaId(result.length > 0 ? result[0].empresa.id : \"\");\n  };\n\n  const handleDays = (value) => {\n    setDays(value);\n  };\n\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\n    <button\n      className=\"flex justify-between pt-4 pb-3 pl-6 pr-2 bg-white border border-gray-300 rounded-full font-objetive-medium sm:text-sm\"\n      onClick={onClick}\n      ref={ref}\n    >\n      {value} <CalendarIcon className=\"w-5 h-5 pb-1 ml-8 mr-2 text-gray-700\" />\n    </button>\n  ));\n\n  const sendToTrash = async (id) => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      await axios({\n        method: \"PUT\",\n        url: `${backendUrl}/actividad/trash/${id}`,\n        data: { state: true },\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      getActivityData();\n      toast.dismiss(toastLoading);\n      toast.success(\"Registro enviado a la papelera!\");\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al enviar a la papelera!\");\n    }\n  };\n\n  const getActivityData = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res.data.filter((actividad) => {\n          return actividad.empresa.id === userSelector.user.id;\n        });\n        setActivityData(result);;\n      } else {\n        setActivityData(res.data);\n      }\n      toast.dismiss(toastLoading);\n    } catch (e) {\n      toast.dismiss(toastLoading);\n    }\n  };\n\n  const successAlertHandler = () => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n      history.push(\"/home\");\n    }, 1500);\n  };\n\n  const onSubmit = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    let errNameEquipo = false;\n    let errLinea = false;\n    let errEstacion = false;\n    let errEmpresa = false;\n\n    if (nameEquipo.length < 1) {\n      setNameEquipoError(true);\n      errNameEquipo = true;\n    }\n\n    if (linea.length < 1) {\n      setLineaError(true);\n      errLinea = true;\n    }\n\n    if (estacion.length < 1) {\n      setEstacionError(true);\n      errEstacion = true;\n    }\n\n    if (empresa.length < 1) {\n      setEmpresaError(true);\n      errEmpresa = true;\n    }\n\n    if (!errNameEquipo && !errEmpresa & !errLinea && !errEstacion) {\n      try {\n        await axios({\n          method: \"POST\",\n          url: `${backendUrl}/actividad`,\n          data: {\n            empresa: empresaId,\n            equipo: nameEquipo,\n            linea: linea,\n            estacion: estacion,\n            tipo: estado,\n            detalles: detalle,\n            fecha: startDate,\n            dias: days,\n          },\n          headers: { Authorization: `Bearer ${userSelector.user.jwtToken}` },\n        });\n        setNameEquipo(\"\");\n        setLinea(\"\");\n        setEstacion(\"\");\n        setEmpresa(\"\");\n        setDays(1);\n        setDetalle(\"\");\n\n        toast.dismiss(toastLoading);\n        successAlertHandler();\n      } catch {\n        toast.dismiss(toastLoading);\n        toast.error(\"Error al crear el registro!\");\n      }\n    }\n    toast.dismiss(toastLoading);\n  };\n\n  const [refreshEstacion, setRefreshEstacion] = useState(\"\");\n  const handleSelectLinea = (value) => {\n    setEmpresa(\"\");\n    const result = dataEstaciones.filter((estacion) => {\n      return estacion.linea === value;\n    });\n    setLinea(value);\n    setEstacion(\"\");\n    setRefreshEstacion(result);\n  };\n\n  const handleSelectEstacion = (value) => {\n    setEstacion(value);\n    setEmpresa(\"\");\n    const result = dataEquipos.filter((equipo) => {\n      return equipo.estacion.id === value;\n    });\n    setDataListEquipo(result);\n  };\n\n  const dumb = () => {};\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/user/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res2 = await axios.get(`${backendUrl}/linea/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      const res3 = await axios.get(`${backendUrl}/estacion/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res4 = await axios.get(`${backendUrl}/equipo/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      const res7 = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res7.data.filter((actividad) => {\n          return actividad.empresa.id === userSelector.user.id;\n        });\n        setActivityData(result);\n      } else {\n        setActivityData(res7.data);\n      }\n\n      const sanitize = res.data.filter((user) => {\n        return user.role === \"Empresa\";\n      });\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res4.data.filter((equipo) => {\n          return equipo.empresa.id === userSelector.user.id;\n        });\n        setDataEquipos(result);\n      } else {\n        setDataEquipos(res4.data);\n      }\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res2.data.filter((linea) => {\n          return linea.empresas.includes(userSelector.user.id);\n        });\n        setDataLineas(result);\n      } else {\n        setDataLineas(res2.data);\n      }\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res3.data.filter((estacion) => {\n          return estacion.empresas.includes(userSelector.user.id);\n        });\n        setDataEstaciones(result);\n      } else {\n        setDataEstaciones(res3.data);\n      }\n\n      setData(sanitize);\n      // setDataLineas(res2.data);\n      // setDataEstaciones(res3.data);\n      // setDataEquipos(res4.data);\n      toast.dismiss(toastLoading);\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al conectarse al servidor!\");\n    }\n  };\n\n  const inputRadioSet = (checked, estado) => {\n    if (checked) {\n      setEstado(estado);\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      {successAlert ? <Alert text=\"Registro creado\" /> : null}\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Registro de mantenimiento\" />\n      <div className=\"px-20 pb-20 vp-desktop\">\n        <div className=\"flex items-end justify-end mt-14\">\n          <div className=\"flex\">\n            <Link to=\"/home\">\n              <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n            </Link>\n            <Link className=\"font-objetive-medium\" to=\"/home\">\n              Volver\n            </Link>\n          </div>\n        </div>\n        <div className=\"relative w-full px-10 pt-10 pb-24 mt-6 bg-gray-100 rounded-3xl\">\n          <h1 className=\"mb-6 text-xl font-objetive-bold\">\n            Cargar nuevo registro de actividad\n          </h1>\n          <div className=\"flex\">\n            <div className=\"flex flex-1\">\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={dataLineas}\n                  text=\"Línea\"\n                  eventHandler={handleSelectLinea}\n                  value={linea}\n                />\n              </div>\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={refreshEstacion}\n                  text=\"Estacion\"\n                  eventHandler={handleSelectEstacion}\n                  value={estacion}\n                />\n              </div>\n            </div>\n            <div className=\"flex-1 pl-14\">\n              <InputDataList\n                placeholder=\"Nombre del equipo\"\n                error={nameEquipoError}\n                eventHandler={onChangeNameEquipo}\n                disabled={estacion ? false : true}\n                data={dataListEquipo}\n                not=\"No hay equipos cargados en la estación seleccionada\"\n                id=\"empresaselect\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <h3 className=\"mt-10 mb-4 font-objetive-medium\">\n              Tipo de actividad para registrar\n            </h3>\n            <div className=\"flex mb-8\">\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  type=\"radio\"\n                  id=\"e1\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Mantenimiento preventivo\");\n                  }}\n                  name=\"push-notifications\"\n                  defaultChecked={true}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e1\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Mantenimiento preventivo\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Mantenimiento correctivo\");\n                  }}\n                  type=\"radio\"\n                  id=\"e2\"\n                  name=\"push-notifications\"\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e2\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Mantenimiento correctivo\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  id=\"e3\"\n                  type=\"radio\"\n                  name=\"push-notifications\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Averías\");\n                  }}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e3\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Averías\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <TextInput\n            placeholder=\"Detalles de la actividad\"\n            eventHandler={onChangeDetalles}\n            error={detalleError}\n            value={detalle}\n          />\n\n          <div className=\"flex justify-between mt-8\">\n            <div className=\"w-2/5\">\n              <div className=\"pl-2 mb-4 font-objetive-medium\">\n                Empresa a cargo del mantenimiento\n              </div>\n              <div className=\"w-60\">\n                <TextInput\n                  placeholder=\"Empresa\"\n                  error={empresaError}\n                  eventHandler={dumb}\n                  value={empresa}\n                  disabled={true}\n                />\n              </div>\n            </div>\n            <div className=\"w-1/4 mr-10\">\n              <div className=\"pl-2 mb-4 font-objetive-medium\">\n                Fecha de registro\n              </div>\n              <DatePicker\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                customInput={<ExampleCustomInput />}\n              />\n            </div>\n\n            <div className=\"w-2/4 mr-4\">\n              <div className=\"pl-2 mb-4 font-objetive-medium\">\n                Cantidad de días que tomo el arreglo\n              </div>\n              <div className=\"w-32\">\n                <NumberPick eventHandler={handleDays} value={days} />\n              </div>\n            </div>\n          </div>\n\n          <button\n            onClick={onSubmit}\n            type=\"button\"\n            className=\"absolute inline-flex items-center px-4 pt-4 pb-3 text-base text-white border border-transparent rounded-full shadow-sm bottom--20 right-32 font-objetive-medium bg-app-purple-btn hover:bg-red-500 focus:outline-none \"\n          >\n            Guardar y cargar\n          </button>\n        </div>\n\n        <div className=\"mt-10\">\n          <div className=\"mt-20\">\n            <Table data={activityData} sendToTrash={sendToTrash} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EquipmentCreate;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/create.js",["291","292","293","294"],"import { useEffect, useState, forwardRef } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ChevronLeftIcon, CalendarIcon } from \"@heroicons/react/outline\";\nimport InputDataList from \"../../../components/form/textInput/datalist\";\nimport { useSelector } from \"react-redux\";\nimport NumberPick from \"../../../components/form/numberPick\";\nimport ItemSelectorWithIcon from \"../../../components/form/itemSelectorWithIcon\";\nimport TextInput from \"../../../components/form/textInput\";\nimport Navbar from \"../../../@app/navbar\";\nimport DatePicker from \"react-datepicker\";\nimport Table from \"./table\";\nimport Alert from \"../../../components/alert\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { backendUrl } from \"../../../config\";\n\nconst EquipmentCreate = () => {\n  const userSelector = useSelector((store) => store.user);\n  const [data, setData] = useState([]);\n  const [nameEquipo, setNameEquipo] = useState(\"\");\n  const [nameEquipoError, setNameEquipoError] = useState(false);\n  const [linea, setLinea] = useState(\"\");\n  const [lineaError, setLineaError] = useState(false);\n  const [estacion, setEstacion] = useState(\"\");\n  const [estacionError, setEstacionError] = useState(false);\n  const [empresa, setEmpresa] = useState(\"\");\n  const [empresaId, setEmpresaId] = useState(\"\");\n  const [empresaError, setEmpresaError] = useState(false);\n  const [dataLineas, setDataLineas] = useState([]);\n  const [dataEquipos, setDataEquipos] = useState([]);\n  const [dataEstaciones, setDataEstaciones] = useState([]);\n  const [estado, setEstado] = useState(\"Mantenimiento preventivo\");\n  const [detalle, setDetalle] = useState(\"\");\n  const [dataListEquipo, setDataListEquipo] = useState([]);\n  const [days, setDays] = useState(1);\n  const [detalleError, setDetalleError] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [successAlert, setSuccessAlert] = useState(false);\n\n  let history = useHistory();\n\n  const onChangeDetalles = (value) => {\n    setDetalle(value);\n    setDetalleError(false);\n  };\n\n  const onChangeNameEquipo = (value) => {\n    setNameEquipo(value);\n    setNameEquipoError(false);\n\n    const result = dataEquipos.filter((equipo) => {\n      return equipo.identificacion === value;\n    });\n\n    setEmpresa(result.length > 0 ? result[0].empresa.name : \"\");\n    setEmpresaId(result.length > 0 ? result[0].empresa.id : \"\");\n  };\n\n  const handleDays = (value) => {\n    setDays(value);\n  };\n\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\n    <button\n      className=\"flex justify-between pt-4 pb-3 pl-6 pr-2 bg-white border border-gray-300 rounded-full font-objetive-medium sm:text-sm\"\n      onClick={onClick}\n      ref={ref}\n    >\n      {value} <CalendarIcon className=\"w-5 h-5 pb-1 ml-8 mr-2 text-gray-700\" />\n    </button>\n  ));\n\n  const successAlertHandler = () => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n      history.push(\"/equipment/activity\");\n    }, 1500);\n  };\n\n  const onSubmit = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    let errNameEquipo = false;\n    let errLinea = false;\n    let errEstacion = false;\n    let errEmpresa = false;\n\n    if (nameEquipo.length < 1) {\n      setNameEquipoError(true);\n      errNameEquipo = true;\n    }\n\n    if (linea.length < 1) {\n      setLineaError(true);\n      errLinea = true;\n    }\n\n    if (estacion.length < 1) {\n      setEstacionError(true);\n      errEstacion = true;\n    }\n\n    if (empresa.length < 1) {\n      setEmpresaError(true);\n      errEmpresa = true;\n    }\n\n    if (!errNameEquipo && !errEmpresa & !errLinea && !errEstacion) {\n      try {\n        await axios({\n          method: \"POST\",\n          url: `${backendUrl}/actividad`,\n          data: {\n            empresa: empresaId,\n            equipo: nameEquipo,\n            linea: linea,\n            estacion: estacion,\n            tipo: estado,\n            detalles: detalle,\n            fecha: startDate,\n            dias: days,\n          },\n          headers: { Authorization: `Bearer ${userSelector.user.jwtToken}` },\n        });\n        setNameEquipo(\"\");\n        setLinea(\"\");\n        setEstacion(\"\");\n        setEmpresa(\"\");\n        setDays(1);\n        setDetalle(\"\");\n\n        toast.dismiss(toastLoading);\n        successAlertHandler();\n      } catch {\n        toast.dismiss(toastLoading);\n        toast.error(\"Error al crear el registro!\");\n      }\n    }\n    toast.dismiss(toastLoading);\n  };\n\n  const [refreshEstacion, setRefreshEstacion] = useState(\"\");\n  const handleSelectLinea = (value) => {\n    setEmpresa(\"\");\n    const result = dataEstaciones.filter((estacion) => {\n      return estacion.linea === value;\n    });\n    setLinea(value);\n    setEstacion(\"\");\n    setRefreshEstacion(result);\n  };\n\n  const handleSelectEstacion = (value) => {\n    setEstacion(value);\n    setNameEquipo(\"\");\n    const result = dataEquipos.filter((equipo) => {\n      return equipo.estacion.id === value;\n    });\n    setDataListEquipo(result);\n  };\n\n  const dumb = () => {};\n\n  const sendToTrash = async (id) => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      await axios({\n        method: \"PUT\",\n        url: `${backendUrl}/actividad/trash/${id}`,\n        data: { state: true },\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      getActivityData();\n      toast.dismiss(toastLoading);\n      toast.success(\"Registro enviado a la papelera!\");\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al enviar a la papelera!\");\n    }\n  };\n\n  const [activityData, setActivityData] = useState([]);\n  const getActivityData = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      setActivityData(res.data);\n      toast.dismiss(toastLoading);\n    } catch (e) {\n      toast.dismiss(toastLoading);\n    }\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/user/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res2 = await axios.get(`${backendUrl}/linea/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res3 = await axios.get(`${backendUrl}/estacion/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res4 = await axios.get(`${backendUrl}/equipo/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      const res7 = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      setActivityData(res7.data);\n\n      const sanitize = res.data.filter((user) => {\n        return user.role === \"Empresa\";\n      });\n\n      setData(sanitize);\n      setDataLineas(res2.data);\n      setDataEstaciones(res3.data);\n      setDataEquipos(res4.data);\n      toast.dismiss(toastLoading);\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al conectarse al servidor!\");\n    }\n  };\n\n  const inputRadioSet = (checked, estado) => {\n    if (checked) {\n      setEstado(estado);\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      {successAlert ? <Alert text=\"Registro creado\" /> : null}\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Registro de mantenimiento\" />\n      <div className=\"px-20 pb-20 vp-desktop\">\n        <div className=\"flex items-end justify-end mt-14\">\n          <div className=\"flex\">\n            <Link to=\"/equipment/activity\">\n              <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n            </Link>\n            <Link className=\"font-objetive-medium\" to=\"/equipment/activity\">\n              Volver\n            </Link>\n          </div>\n        </div>\n        <div className=\"relative w-full px-10 pt-10 pb-24 mt-6 bg-gray-100 rounded-3xl\">\n          <h1 className=\"mb-6 text-xl font-objetive-bold\">\n            Cargar nuevo registro de actividad\n          </h1>\n          <div className=\"flex\">\n            <div className=\"flex flex-1\">\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={dataLineas}\n                  text=\"Línea\"\n                  eventHandler={handleSelectLinea}\n                  value={linea}\n                />\n              </div>\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={refreshEstacion}\n                  text=\"Estacion\"\n                  eventHandler={handleSelectEstacion}\n                  value={estacion}\n                />\n              </div>\n            </div>\n            <div className=\"flex-1 pl-14\">\n              <InputDataList\n                placeholder=\"Nombre del equipo\"\n                error={nameEquipoError}\n                eventHandler={onChangeNameEquipo}\n                disabled={estacion ? false : true}\n                data={dataListEquipo}\n                not=\"No hay equipos cargados en la estación seleccionada\"\n                id=\"empresaselect\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <h3 className=\"mt-10 mb-4 font-objetive-medium\">\n              Tipo de actividad para registrar\n            </h3>\n            <div className=\"flex mb-8\">\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  type=\"radio\"\n                  id=\"e1\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Mantenimiento preventivo\");\n                  }}\n                  name=\"push-notifications\"\n                  defaultChecked={true}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e1\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Mantenimiento preventivo\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Mantenimiento correctivo\");\n                  }}\n                  type=\"radio\"\n                  id=\"e2\"\n                  name=\"push-notifications\"\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e2\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Mantenimiento correctivo\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  id=\"e3\"\n                  type=\"radio\"\n                  name=\"push-notifications\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Averías\");\n                  }}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e3\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Averías\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <TextInput\n            placeholder=\"Detalles de la actividad\"\n            eventHandler={onChangeDetalles}\n            error={detalleError}\n            value={detalle}\n          />\n\n          <div className=\"flex justify-between mt-8\">\n            <div className=\"w-2/5\">\n              <div className=\"pl-2 mb-4 font-objetive-medium\">\n                Empresa a cargo del mantenimiento\n              </div>\n              <div className=\"w-60\">\n                <TextInput\n                  placeholder=\"Empresa\"\n                  error={empresaError}\n                  eventHandler={dumb}\n                  value={empresa}\n                  disabled={true}\n                />\n              </div>\n            </div>\n            <div className=\"w-1/4 mr-10\">\n              <div className=\"pl-2 mb-4 font-objetive-medium\">\n                Fecha de registro\n              </div>\n              <DatePicker\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                customInput={<ExampleCustomInput />}\n              />\n            </div>\n\n            <div className=\"w-2/4 mr-4\">\n              <div className=\"pl-2 mb-4 font-objetive-medium\">\n                Cantidad de días que tomo el arreglo\n              </div>\n              <div className=\"w-32\">\n                <NumberPick eventHandler={handleDays} value={days} />\n              </div>\n            </div>\n          </div>\n\n          <button\n            onClick={onSubmit}\n            type=\"button\"\n            className=\"absolute inline-flex items-center px-4 pt-4 pb-3 text-base text-white border border-transparent rounded-full shadow-sm bottom--20 right-32 font-objetive-medium bg-app-purple-btn hover:bg-red-500 focus:outline-none \"\n          >\n            Guardar y cargar\n          </button>\n        </div>\n\n        <div className=\"mt-10\">\n          <div className=\"mt-20\">\n            <Table data={activityData} sendToTrash={sendToTrash} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EquipmentCreate;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/edit.js",["295","296","297","298","299"],"import { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../../redux/ducks/user\";\nimport { ChevronLeftIcon } from \"@heroicons/react/outline\";\nimport TextInput from \"../../components/form/textInput\";\nimport ItemSelector from \"../../components/form/itemSelector\";\nimport { useDropzone } from \"react-dropzone\";\nimport ItemSelectorWithIcon from \"../../components/form/itemSelectorWithIcon\";\nimport Navbar from \"../../@app/navbar\";\nimport Alert from \"../../components/alert\";\nimport Dropzone from \"../../components/home/equipo/dropzone\";\nimport { backendUrl } from \"../../config\";\n\nconst EquipmentCreate = (props) => {\n  const { id } = props.location.state;\n  const [data, setData] = useState([]);\n  const [nameEquipo, setNameEquipo] = useState(\"\");\n  const [nameEquipoError, setNameEquipoError] = useState(false);\n  const [nameDest, setNameDest] = useState(\"\");\n  const [nameDestError, setNameDestError] = useState(false);\n  const [asunto, setAsunto] = useState(\"\");\n  const [asuntoError, setAsuntoError] = useState(false);\n  const [mensaje, setMensaje] = useState(\"\");\n  const [mensajeError, setMensajeError] = useState(false);\n  const [linea, setLinea] = useState(\"\");\n  const [lineaError, setLineaError] = useState(false);\n  const [estacion, setEstacion] = useState(\"\");\n  const [estacionError, setEstacionError] = useState(false);\n  const [empresa, setEmpresa] = useState(\"\");\n  const [empresaError, setEmpresaError] = useState(false);\n  const [tipo, setTipo] = useState(\"\");\n  const [tipoError, setTipoError] = useState(false);\n  const [dataLineas, setDataLineas] = useState([]);\n  const [dataEstaciones, setDataEstaciones] = useState([]);\n  const [estado, setEstado] = useState(\"En servicio\");\n  const [funciona, setFuncionando] = useState(true);\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [imgUno, setImgUno] = useState(\"\");\n  const [imgDos, setImgDos] = useState(\"\");\n  const [imgTres, setImgTres] = useState(\"\");\n  const [file, setFile] = useState([]);\n  const [file2, setFile2] = useState([]);\n  const [file3, setFile3] = useState([]);\n\n\n  const userSelector = useSelector((store) => store.user);\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const tiposEquipos = [\n    {\n      id: \"Elevador\",\n      name: \"Elevador\",\n    },\n    {\n      id: \"Escalera\",\n      name: \"Escalera\",\n    },\n    {\n      id: \"Salvaescalera\",\n      name: \"Salvaescalera\",\n    },\n    {\n      id: \"Montacargas\",\n      name: \"Montacargas\",\n    },\n    {\n      id: \"Acera móvil\",\n      name: \"Acera móvil\",\n    },\n  ];\n\n  const onDrop = useCallback(acceptedFiles => {\n    setFile([...file, ...acceptedFiles])\n  }, [file])\n\n  const onDrop2 = useCallback(acceptedFiles => {\n    setFile2([...file2, ...acceptedFiles])\n  }, [file2])\n\n  const onDrop3 = useCallback(acceptedFiles => {\n    setFile3([...file3, ...acceptedFiles])\n  }, [file3])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png\",\n  });\n\n  const {\n    getRootProps: getRootProps2,\n    getInputProps: getInputProps2,\n  } = useDropzone({\n    onDrop: onDrop2,\n    multiple: false,\n    accept: \"image/jpeg, image/png\",\n  });\n\n  const {\n    getRootProps: getRootProps3,\n    getInputProps: getInputProps3,\n  } = useDropzone({\n    onDrop: onDrop3,\n    multiple: false,\n    accept: \"image/jpeg, image/png\",\n  });\n  const onChangeNameEquipo = (value) => {\n    setNameEquipo(value);\n    setNameEquipoError(false);\n  };\n\n  const onChangeNameDest = (value) => {\n    setNameDest(value);\n    setNameDestError(false);\n  };\n\n  const onChangeAsunto = (value) => {\n    setAsunto(value);\n    setAsuntoError(false);\n  };\n\n  const onChangeMensaje = (e) => {\n    setMensaje(e.target.value);\n    setMensajeError(false);\n  };\n\n  const successAlertHandler = () => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n      history.push(\"/equipment\");\n    }, 1500);\n  };\n\n  const deleteImg = () => {\n    setImgUno(\"\")\n    setFile([])\n  };\n\n  const deleteImg2 = () => {\n    setImgDos(\"\")\n    setFile2([])\n  };\n\n  const deleteImg3 = () => {\n    setImgTres(\"\")\n    setFile2([])\n  };\n\n  const onSubmit = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    let errNameEquipo = false;\n    let errNameDest = false;\n    let errAsunto = false;\n    let errMensaje = false;\n    let errLinea = false;\n    let errEstacion = false;\n    let errEmpresa = false;\n    let errTipo = false;\n\n    if (nameEquipo.length < 1) {\n      setNameEquipoError(true);\n      errNameEquipo = true;\n    }\n\n    if (nameDest.length < 1) {\n      setNameDestError(true);\n      errNameDest = true;\n    }\n\n    if (tipo.length < 1) {\n      setTipoError(true);\n      errTipo = true;\n    }\n\n    if (asunto.length < 1) {\n      setAsuntoError(true);\n      errAsunto = true;\n    }\n\n    if (mensaje.length < 1) {\n      setMensajeError(true);\n      errMensaje = true;\n    }\n\n    if (linea.length < 1) {\n      setLineaError(true);\n      errLinea = true;\n    }\n\n    if (estacion.length < 1) {\n      setEstacionError(true);\n      errEstacion = true;\n    }\n\n    if (empresa.length < 1) {\n      setEmpresaError(true);\n      errEmpresa = true;\n    }\n\n    if (\n      !errNameEquipo &&\n      !errNameDest &&\n      !errAsunto &&\n      !errMensaje &&\n      !errLinea &&\n      !errEstacion &&\n      !errEmpresa &&\n      !errTipo\n    ) {\n      try {\n        const formData = new FormData();\n        formData.append(\"name\", nameEquipo);\n        formData.append(\"linea\", linea);\n        formData.append(\"estacion\", estacion);\n        formData.append(\"empresa\", empresa);\n        formData.append(\"identificacion\", nameDest);\n        formData.append(\"modelo\", asunto);\n        formData.append(\"tipo\", tipo);\n        formData.append(\"detalles\", mensaje);\n        formData.append(\"estado\", estado);\n        formData.append(\"funciona\", funciona);\n        formData.append(\"imagenUno\", file[0]);\n        formData.append(\"imagenDos\", file2[0]);\n        formData.append(\"imagenTres\", file3[0]);\n\n        await axios({\n          method: \"PUT\",\n          url: `${backendUrl}/equipo/${id}`,\n          data: formData,\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n            \"Content-Type\":\n              \"multipart/form-data boundary=\" +\n              Math.random().toString().substr(2),\n          },\n        });\n        setNameDest(\"\");\n        setNameEquipo(\"\");\n        setAsunto(\"\");\n        setMensaje(\"\");\n        setLinea(\"\");\n        setEstacion(\"\");\n        setEmpresa(\"\");\n        toast.dismiss(toastLoading);\n        successAlertHandler();\n      } catch {\n        toast.dismiss(toastLoading);\n        toast.error(\"Error al cargar el equipo!\");\n      }\n    }\n      toast.dismiss(toastLoading);\n  };\n\n  const [refreshEstacion, setRefreshEstacion] = useState(\"\");\n  const handleSelectLinea = (value) => {\n    const result = dataEstaciones.filter((estacion) => {\n      return estacion.linea === value;\n    });\n    setLinea(value);\n    setEstacion(\"\");\n    setRefreshEstacion(result);\n  };\n\n  const handleSelectEstacion = (value) => {\n    setEstacion(value);\n  };\n\n  const handleSelectEmpresa = (value) => {\n    setEmpresa(value);\n  };\n\n  const handleSelectTipo = (value) => {\n    setTipo(value);\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/user/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res2 = await axios.get(`${backendUrl}/linea/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res3 = await axios.get(`${backendUrl}/estacion/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      const sanitize = res.data.filter((user) => {\n        return user.role === \"Empresa\";\n      });\n\n      setData(sanitize);\n      setDataLineas(res2.data);\n      setDataEstaciones(res3.data);\n\n      const res4 = await axios.get(\n        `${backendUrl}/equipo/${id}`,\n        {\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n          },\n        }\n      );\n\n      setNameEquipo(res4.data.name);\n      setNameDest(res4.data.identificacion);\n      setAsunto(res4.data.modelo);\n      setMensaje(res4.data.detalles);\n      setTipo(res4.data.tipo);\n      setLinea(res4.data.linea.id);\n      setEmpresa(res4.data.empresa.id);\n      setImgUno(res4.data.imagenUno);\n      setImgDos(res4.data.imagenDos);\n      setImgTres(res4.data.imagenTres);\n\n      const result = res3.data.filter((estacion) => {\n        return estacion.linea === res4.data.linea.id;\n      });\n\n      setRefreshEstacion(result);\n      setEstacion(res4.data.estacion.id);\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      if (error.response) {\n        if (error.response.status === 401) {\n          dispatch(logout(history));\n        }\n      }\n    }\n  };\n\n  const inputRadioSet = (checked, estado, funcionando) => {\n    if (checked) {\n      setEstado(estado);\n      setFuncionando(funcionando);\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      {successAlert ? <Alert text=\"Registro creado\" /> : null}\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Carga y edición de equipos\" />\n      <div className=\"px-20 pb-20 vp-desktop\">\n        <div className=\"flex items-end justify-between mt-14\">\n          <h1 className=\"text-xl font-objetive-bold\">Cargar nuevo equipo</h1>\n          <div className=\"flex\">\n            <Link to=\"/home\">\n              <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n            </Link>\n            <Link className=\"font-objetive-medium\" to=\"/equipment\">\n              Volver\n            </Link>\n          </div>\n        </div>\n        <div className=\"relative w-full px-10 pt-10 pb-24 mt-6 bg-gray-100 rounded-3xl\">\n          <div className=\"flex\">\n            <div className=\"flex-1 pr-14\">\n              <TextInput\n                placeholder=\"Nombre\"\n                error={nameEquipoError}\n                eventHandler={onChangeNameEquipo}\n                value={nameEquipo}\n              />\n            </div>\n            <div className=\"flex flex-1\">\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={dataLineas}\n                  text=\"Línea\"\n                  eventHandler={handleSelectLinea}\n                  value={linea}\n                />\n              </div>\n              <div className=\"flex-1 pl-6\">\n                <ItemSelectorWithIcon\n                  data={refreshEstacion}\n                  text=\"Estacion\"\n                  eventHandler={handleSelectEstacion}\n                  value={estacion}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-4 flex\">\n            <div className=\"flex-1 pr-6\"></div>\n            <div className=\"flex-1 pl-8\">\n              <ItemSelector\n                data={tiposEquipos}\n                text=\"Tipo\"\n                eventHandler={handleSelectTipo}\n                value={tipo}\n              />\n            </div>\n          </div>\n\n          <hr className=\"my-8 border-gray-300\" />\n\n          <div className=\"flex mb-8\">\n            <div className=\"flex-1 pr-14\">\n              <div className=\"w-4/6\">\n                <div className=\"pl-2 mb-4 font-objetive-medium\">\n                  Empresa a cargo del mantenimiento\n                </div>\n                <ItemSelector\n                  data={data}\n                  text=\"Empresa\"\n                  eventHandler={handleSelectEmpresa}\n                  value={empresa}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-1\">\n              <div className=\"flex-1 pr-6\">\n                <div className=\"pl-2 mb-4 font-objetive-medium\">\n                  Nº de identificación\n                </div>\n                <TextInput\n                  placeholder=\"\"\n                  error={nameDestError}\n                  eventHandler={onChangeNameDest}\n                  value={nameDest}\n                />\n              </div>\n              <div className=\"flex-1 pl-6\">\n                <div className=\"pl-2 mb-4 font-objetive-medium\">\n                  Marca y modelo\n                </div>\n                <TextInput\n                  placeholder=\"\"\n                  eventHandler={onChangeAsunto}\n                  error={asuntoError}\n                  value={asunto}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-1\">\n            <textarea\n              onChange={onChangeMensaje}\n              id=\"about\"\n              name=\"about\"\n              rows={3}\n              value={mensaje}\n              className={`w-full  font-objetive-medium pt-4 pb-3 pl-6 pr-10 shadow-sm block  sm:text-sm rounded-3xl border  ${\n                mensajeError\n                  ? \"placeholder-red-300 focus:ring-red-300 focus:border-red-300 border-red-300\"\n                  : \"placeholder-gray-800 border-gray-300 focus:ring-gray-300 focus:border-gray-300\"\n              }`}\n              placeholder=\"Otros detalles del equipo\"\n            />\n          </div>\n\n          <hr className=\"my-8 border-gray-300\" />\n\n          <div>\n            <h3 className=\"mb-2 font-objetive-medium\">Imágenes del equipo</h3>\n            <p className=\"mb-10 text-sm text-gray-800 font-objetive-regular\">\n              Formatos aceptados JPEG, JPG, PNG en 72 dpi. Máximo 3 imágenes\n            </p>\n\n            <div className=\"flex\">\n              <Dropzone\n                img={imgUno}\n                getRootProps={getRootProps}\n                getInputProps={getInputProps}\n                acceptedFiles={file}\n                deleteImg={deleteImg}\n              />\n              <Dropzone\n                img={imgDos}\n                getRootProps={getRootProps2}\n                getInputProps={getInputProps2}\n                acceptedFiles={file2}\n                deleteImg={deleteImg2}\n              />\n              <Dropzone\n                img={imgTres}\n                getRootProps={getRootProps3}\n                getInputProps={getInputProps3}\n                acceptedFiles={file3}\n                deleteImg={deleteImg3}\n              />\n            </div>\n          </div>\n\n          <hr className=\"my-8 border-gray-300\" />\n\n          <div>\n            <h3 className=\"mb-10 font-objetive-medium\">\n              Estado actual del equipo\n            </h3>\n            <div className=\"flex mb-5\">\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  type=\"radio\"\n                  id=\"e1\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"En servicio\", true);\n                  }}\n                  name=\"push-notifications\"\n                  defaultChecked={true}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e1\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  En servicio\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  onChange={(e) => {\n                    inputRadioSet(\n                      e.target.checked,\n                      \"Fuera de servicio por mantenimiento\",\n                      false\n                    );\n                  }}\n                  type=\"radio\"\n                  id=\"e2\"\n                  name=\"push-notifications\"\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e2\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Fuera de servicio por mantenimiento\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  id=\"e3\"\n                  type=\"radio\"\n                  name=\"push-notifications\"\n                  onChange={(e) => {\n                    inputRadioSet(\n                      e.target.checked,\n                      \"Fuera de servicio por afectaciones externas\",\n                      false\n                    );\n                  }}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e3\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Fuera de servicio por afectaciones externas\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  type=\"radio\"\n                  id=\"e4\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Siniestrado\", false);\n                  }}\n                  name=\"push-notifications\"\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e4\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Siniestrado\n                </label>\n              </div>\n            </div>\n            <div className=\"flex\">\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  id=\"e5\"\n                  type=\"radio\"\n                  name=\"push-notifications\"\n                  onChange={(e) => {\n                    inputRadioSet(\n                      e.target.checked,\n                      \"Fuera de servicio por disponibilidad de refaccionamiento\",\n                      false\n                    );\n                  }}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e5\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Fuera de servicio por disponibilidad de refaccionamiento\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  id=\"e6\"\n                  type=\"radio\"\n                  name=\"push-notifications\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"En avería\", false);\n                  }}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e6\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  En avería\n                </label>\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onSubmit}\n            type=\"button\"\n            className=\"absolute inline-flex items-center px-4 pt-4 pb-3 text-base text-white border border-transparent rounded-full shadow-sm bottom--20 right-32 font-objetive-medium bg-app-purple-btn hover:bg-red-500 focus:outline-none \"\n          >\n            Guardar y cargar\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EquipmentCreate;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/search.js",["300"],"import { TrashIcon } from \"@heroicons/react/outline\";\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"../../@app/navbar\";\nimport TableOrderPagination from \"../../components/tableOrderPagination\";\nimport { similarity } from \"../../helpers/string\";\nimport { useSelector } from \"react-redux\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { Link } from \"react-router-dom\";\nimport usePagination from \"../../hooks/usePagination\";\nimport useOrderTable from \"../../hooks/useOrderTable\";\nimport { backendUrl } from \"../../config\";\n\nconst Search = () => {\n  const userSelector = useSelector((store) => store.user);\n  const { response } = useFetch({\n    url: `${backendUrl}/equipo`,\n    options: {\n      headers: {\n        Authorization: `Bearer ${userSelector.user.jwtToken}`,\n      },\n    },\n  });\n  const [searchValue, setSearchValue] = useState(undefined);\n  const [equipos, setEquipos] = useState([]);\n  const paginationObject = usePagination({\n    maxCantRow: 7,\n    cantElements: equipos.length,\n  });\n  const { dataOrdered, sortTable } = useOrderTable({\n    data: equipos,\n    initProperty: \"createdAt\",\n  });\n\n  const handleClickSearch = (value) => {\n    setSearchValue(value);\n  };\n\n  useEffect(() => {\n    if (searchValue === undefined) {\n      setSearchValue(localStorage.getItem(\"search\"));\n    }\n  }, [response]);\n\n  useEffect(() => {\n    if (response) {\n      if (searchValue) {\n        const equipFiltered = response.filter((equipo) => {\n          const coincidence = similarity(equipo.name, searchValue);\n          return coincidence > 0.3;\n        });\n        setEquipos(equipFiltered);\n      } else {\n        setEquipos(response);\n      }\n    }\n  }, [searchValue, response]);\n\n  return (\n    <>\n      <Navbar\n        title=\"Búsqueda de equipos\"\n        searchValue={searchValue}\n        handleClickSearch={handleClickSearch}\n      />\n      <div className=\"px-20 pt-20 pb-10 vp-desktop\">\n        <h1 className=\"mb-2 font-objetive-bold\">\n          {searchValue || \"Todos los equipos\"} - {equipos.length} Resultados de\n          la búsqueda\n        </h1>\n        <table className=\"w-full table-auto\">\n          <tbody>\n            {dataOrdered.map((equipo) => {\n              return (\n                <tr className=\"relative\" key={equipo.id}>\n                  <td\n                    className={`py-4 text-xs transition-padding duration-500 ease-in-out border-b border-gray-300 font-objetive-medium`}\n                  >\n                    {equipo.name}\n                  </td>\n                  <td\n                    className={`py-4 text-xs transition-padding duration-500 ease-in-out truncate border-b border-gray-300 font-objetive-regular`}\n                  >\n                    {equipo.linea.name} - {equipo.linea.lugar} -{\" \"}\n                    {equipo.estacion.name}\n                  </td>\n                  <td\n                    className={`py-4 text-xs transition-padding duration-500 ease-in-out border-b border-gray-300 font-objetive-regular`}\n                  >\n                    A cargo de: {equipo.empresa.name}\n                  </td>\n                  <td\n                    className={`py-4 border-b transition-padding duration-500 ease-in-out border-gray-300`}\n                  >\n                    <button className=\"text-xs text-black underline font-objetive-bold\">\n                      <Link\n                        to={{\n                          pathname: \"/equipment/details\",\n                          state: { id: equipo.id },\n                        }}\n                      >\n                        Ver ficha\n                      </Link>\n                    </button>\n                  </td>\n                  {userSelector.user.role === \"Admin\" ? (\n                    <td\n                      className={`py-4 border-b transition-padding duration-500 ease-in-out border-gray-300`}\n                    >\n                      <button className=\"text-xs underline font-objetive-bold text-app-purple-300\">\n                        <Link\n                          to={{\n                            pathname: \"/equipment/edit\",\n                            state: { id: equipo.id },\n                          }}\n                        >\n                          Editar\n                        </Link>\n                      </button>\n                    </td>\n                  ) : null}\n\n                  {userSelector.user.role === \"Admin\" ? (\n                    <td\n                      className={`py-4 border-b transition-padding duration-500 ease-in-out border-gray-300`}\n                    >\n                      <button className=\"text-xs underline font-objetive-bold text-app-purple-300\">\n                        <TrashIcon className=\"w-5 h-5\" />\n                      </button>\n                    </td>\n                  ) : null}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <TableOrderPagination\n          {...paginationObject}\n          order={{ sortTable, alphabetic: \"name\", date: \"createdAt\" }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Search;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/create.js",["301","302","303","304","305"],"import { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ChevronLeftIcon } from \"@heroicons/react/outline\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../../redux/ducks/user\";\nimport TextInput from \"../../components/form/textInput\";\nimport ItemSelector from \"../../components/form/itemSelector\";\nimport { useDropzone } from \"react-dropzone\";\nimport ItemSelectorWithIcon from \"../../components/form/itemSelectorWithIcon\";\nimport Navbar from \"../../@app/navbar\";\nimport Alert from \"../../components/alert\";\nimport Dropzone from \"../../components/home/equipo/dropzone\";\nimport { backendUrl } from \"../../config\";\n\nconst EquipmentCreate = () => {\n  const userSelector = useSelector((store) => store.user);\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [nameEquipo, setNameEquipo] = useState(\"\");\n  const [nameEquipoError, setNameEquipoError] = useState(false);\n  const [nameDest, setNameDest] = useState(\"\");\n  const [nameDestError, setNameDestError] = useState(false);\n  const [asunto, setAsunto] = useState(\"\");\n  const [asuntoError, setAsuntoError] = useState(false);\n  const [mensaje, setMensaje] = useState(\"\");\n  const [mensajeError, setMensajeError] = useState(false);\n  const [linea, setLinea] = useState(\"\");\n  const [lineaError, setLineaError] = useState(false);\n  const [estacion, setEstacion] = useState(\"\");\n  const [estacionError, setEstacionError] = useState(false);\n  const [empresa, setEmpresa] = useState(\"\");\n  const [empresaError, setEmpresaError] = useState(false);\n  const [tipo, setTipo] = useState(\"\");\n  const [tipoError, setTipoError] = useState(false);\n  const [dataLineas, setDataLineas] = useState([]);\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [dataEstaciones, setDataEstaciones] = useState([]);\n  const [estado, setEstado] = useState(\"En servicio\");\n  const [funciona, setFuncionando] = useState(true);\n  const [file, setFile] = useState([]);\n  const [file2, setFile2] = useState([]);\n  const [file3, setFile3] = useState([]);\n\n  const tiposEquipos = [\n    {\n      id: \"Elevador\",\n      name: \"Elevador\",\n    },\n    {\n      id: \"Escalera\",\n      name: \"Escalera\",\n    },\n    {\n      id: \"Salvaescalera\",\n      name: \"Salvaescalera\",\n    },\n    {\n      id: \"Montacargas\",\n      name: \"Montacargas\",\n    },\n    {\n      id: \"Acera móvil\",\n      name: \"Acera móvil\",\n    },\n  ];\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFile([...file, ...acceptedFiles]);\n    },\n    [file]\n  );\n\n  const onDrop2 = useCallback(\n    (acceptedFiles) => {\n      setFile2([...file2, ...acceptedFiles]);\n    },\n    [file2]\n  );\n\n  const onDrop3 = useCallback(\n    (acceptedFiles) => {\n      setFile3([...file3, ...acceptedFiles]);\n    },\n    [file3]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png\",\n  });\n\n  const { getRootProps: getRootProps2, getInputProps: getInputProps2 } =\n    useDropzone({\n      onDrop: onDrop2,\n      multiple: false,\n      accept: \"image/jpeg, image/png\",\n    });\n\n  const { getRootProps: getRootProps3, getInputProps: getInputProps3 } =\n    useDropzone({\n      onDrop: onDrop3,\n      multiple: false,\n      accept: \"image/jpeg, image/png\",\n    });\n\n  const onChangeNameEquipo = (value) => {\n    setNameEquipo(value);\n    setNameEquipoError(false);\n  };\n\n  const onChangeNameDest = (value) => {\n    setNameDest(value);\n    setNameDestError(false);\n  };\n\n  const onChangeAsunto = (value) => {\n    setAsunto(value);\n    setAsuntoError(false);\n  };\n\n  const onChangeMensaje = (e) => {\n    setMensaje(e.target.value);\n    setMensajeError(false);\n  };\n\n  const successAlertHandler = () => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n      history.push(\"/equipment\");\n    }, 1500);\n  };\n\n  const deleteImg = () => {\n    setFile([]);\n  };\n\n  const deleteImg2 = () => {\n    setFile2([]);\n  };\n\n  const deleteImg3 = () => {\n    setFile2([]);\n  };\n\n  const onSubmit = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    let errNameEquipo = false;\n    let errNameDest = false;\n    let errAsunto = false;\n    let errMensaje = false;\n    let errLinea = false;\n    let errEstacion = false;\n    let errEmpresa = false;\n    let errTipo = false;\n\n    if (nameEquipo.length < 1) {\n      setNameEquipoError(true);\n      errNameEquipo = true;\n    }\n\n    if (nameDest.length < 1) {\n      setNameDestError(true);\n      errNameDest = true;\n    }\n\n    if (asunto.length < 1) {\n      setAsuntoError(true);\n      errAsunto = true;\n    }\n\n    if (mensaje.length < 1) {\n      setMensajeError(true);\n      errMensaje = true;\n    }\n\n    if (linea.length < 1) {\n      setLineaError(true);\n      errLinea = true;\n    }\n\n    if (tipo.length < 1) {\n      setTipoError(true);\n      errTipo = true;\n    }\n\n    if (estacion.length < 1) {\n      setEstacionError(true);\n      errEstacion = true;\n    }\n\n    if (empresa.length < 1) {\n      setEmpresaError(true);\n      errEmpresa = true;\n    }\n\n    if (\n      !errNameEquipo &&\n      !errNameDest &&\n      !errAsunto &&\n      !errMensaje &&\n      !errLinea &&\n      !errEstacion &&\n      !errEmpresa &&\n      !errTipo\n    ) {\n      try {\n        const formData = new FormData();\n        formData.append(\"name\", nameEquipo);\n        formData.append(\"linea\", linea);\n        formData.append(\"estacion\", estacion);\n        formData.append(\"empresa\", empresa);\n        formData.append(\"identificacion\", nameDest);\n        formData.append(\"modelo\", asunto);\n        formData.append(\"tipo\", tipo);\n        formData.append(\"detalles\", mensaje);\n        formData.append(\"estado\", estado);\n        formData.append(\"funciona\", funciona);\n        formData.append(\"imagenUno\", file[0]);\n        formData.append(\"imagenDos\", file2[0]);\n        formData.append(\"imagenTres\", file3[0]);\n\n        await axios({\n          method: \"POST\",\n          url: `${backendUrl}/equipo`,\n          data: formData,\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n            \"Content-Type\":\n              \"multipart/form-data boundary=\" +\n              Math.random().toString().substr(2),\n          },\n        });\n        setNameDest(\"\");\n        setNameEquipo(\"\");\n        setAsunto(\"\");\n        setMensaje(\"\");\n        setLinea(\"\");\n        setEstacion(\"\");\n        setEmpresa(\"\");\n        toast.dismiss(toastLoading);\n        successAlertHandler();\n      } catch {\n        toast.dismiss(toastLoading);\n        toast.error(\"Error al cargar el equipo!\");\n      }\n    }\n    toast.dismiss(toastLoading);\n  };\n\n  const [refreshEstacion, setRefreshEstacion] = useState(\"\");\n  const handleSelectLinea = (value) => {\n    const result = dataEstaciones.filter((estacion) => {\n      return estacion.linea === value;\n    });\n    setLinea(value);\n    setEstacion(\"\");\n    setRefreshEstacion(result);\n  };\n\n  const handleSelectEstacion = (value) => {\n    setEstacion(value);\n  };\n\n  const handleSelectEmpresa = (value) => {\n    setEmpresa(value);\n  };\n\n  const handleSelectTipo = (value) => {\n    setTipo(value);\n  };\n\n  const consult = async (source) => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/user/`, {\n        cancelToken: source.token,\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res2 = await axios.get(`${backendUrl}/linea/`, {\n        cancelToken: source.token,\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res3 = await axios.get(`${backendUrl}/estacion/`, {\n        cancelToken: source.token,\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      const sanitize = res.data.filter((user) => {\n        return user.role === \"Empresa\";\n      });\n\n      setData(sanitize);\n      setDataLineas(res2.data);\n      setDataEstaciones(res3.data);\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      if (error.response) {\n        if (error.response.status === 401) {\n          dispatch(logout(history));\n        }\n      }\n    }\n  };\n\n  const inputRadioSet = (checked, estado, funcionando) => {\n    if (checked) {\n      setEstado(estado);\n      setFuncionando(funcionando);\n    }\n  };\n\n  useEffect(() => {\n    let source = axios.CancelToken.source();\n    consult(source);\n\n    return () => {\n      source.cancel();\n    };\n  }, []);\n\n  return (\n    <>\n      {successAlert ? <Alert text=\"Registro creado\" /> : null}\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Carga y edición de equipos\" />\n      <div className=\"px-20 pb-20 vp-desktop\">\n        <div className=\"flex items-end justify-between mt-14\">\n          <h1 className=\"text-xl font-objetive-bold\">Cargar nuevo equipo</h1>\n          <div className=\"flex\">\n            <Link to=\"/home\">\n              <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n            </Link>\n            <Link className=\"font-objetive-medium\" to=\"/equipment\">\n              Volver\n            </Link>\n          </div>\n        </div>\n        <div className=\"relative w-full px-10 pt-10 pb-24 mt-6 bg-gray-100 rounded-3xl\">\n          <div className=\"flex\">\n            <div className=\"flex-1 pr-14\">\n              <TextInput\n                placeholder=\"Nombre\"\n                error={nameEquipoError}\n                eventHandler={onChangeNameEquipo}\n                value={nameEquipo}\n              />\n            </div>\n            <div className=\"flex flex-1\">\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={dataLineas}\n                  text=\"Línea\"\n                  eventHandler={handleSelectLinea}\n                  value={linea}\n                />\n              </div>\n              <div className=\"flex-1 pl-6\">\n                <ItemSelectorWithIcon\n                  data={refreshEstacion}\n                  text=\"Estacion\"\n                  eventHandler={handleSelectEstacion}\n                  value={estacion}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-4 flex\">\n            <div className=\"flex-1 pr-6\"></div>\n            <div className=\"flex-1 pl-8\">\n              <ItemSelector\n                data={tiposEquipos}\n                text=\"Tipo\"\n                eventHandler={handleSelectTipo}\n                value={tipo}\n              />\n            </div>\n          </div>\n\n          <hr className=\"my-8 border-gray-300\" />\n\n          <div className=\"flex mb-8\">\n            <div className=\"flex-1 pr-14\">\n              <div className=\"w-4/6\">\n                <div className=\"pl-2 mb-4 font-objetive-medium\">\n                  Empresa a cargo del mantenimiento\n                </div>\n                <ItemSelector\n                  data={data}\n                  text=\"Empresa\"\n                  eventHandler={handleSelectEmpresa}\n                  value={empresa}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-1\">\n              <div className=\"flex-1 pr-6\">\n                <div className=\"pl-2 mb-4 font-objetive-medium\">\n                  Nº de identificación\n                </div>\n                <TextInput\n                  placeholder=\"\"\n                  error={nameDestError}\n                  eventHandler={onChangeNameDest}\n                  value={nameDest}\n                />\n              </div>\n              <div className=\"flex-1 pl-6\">\n                <div className=\"pl-2 mb-4 font-objetive-medium\">\n                  Marca y modelo\n                </div>\n                <TextInput\n                  placeholder=\"\"\n                  eventHandler={onChangeAsunto}\n                  error={asuntoError}\n                  value={asunto}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-1\">\n            <textarea\n              onChange={onChangeMensaje}\n              id=\"about\"\n              name=\"about\"\n              rows={3}\n              value={mensaje}\n              className={`w-full  font-objetive-medium pt-4 pb-3 pl-6 pr-10 shadow-sm block  sm:text-sm rounded-3xl border  ${\n                mensajeError\n                  ? \"placeholder-red-300 focus:ring-red-300 focus:border-red-300 border-red-300\"\n                  : \"placeholder-gray-800 border-gray-300 focus:ring-gray-300 focus:border-gray-300\"\n              }`}\n              placeholder=\"Otros detalles del equipo\"\n            />\n          </div>\n\n          <hr className=\"my-8 border-gray-300\" />\n\n          <div>\n            <h3 className=\"mb-2 font-objetive-medium\">Imágenes del equipo</h3>\n            <p className=\"mb-10 text-sm text-gray-800 font-objetive-regular\">\n              Formatos aceptados JPEG, JPG, PNG en 72 dpi. Máximo 3 imágenes\n            </p>\n\n            <div className=\"flex\">\n              <Dropzone\n                getRootProps={getRootProps}\n                getInputProps={getInputProps}\n                acceptedFiles={file}\n                deleteImg={deleteImg}\n              />\n              <Dropzone\n                getRootProps={getRootProps2}\n                getInputProps={getInputProps2}\n                acceptedFiles={file2}\n                deleteImg={deleteImg2}\n              />\n              <Dropzone\n                getRootProps={getRootProps3}\n                getInputProps={getInputProps3}\n                acceptedFiles={file3}\n                deleteImg={deleteImg3}\n              />\n            </div>\n          </div>\n\n          <hr className=\"my-8 border-gray-300\" />\n\n          <div>\n            <h3 className=\"mb-10 font-objetive-medium\">\n              Estado actual del equipo\n            </h3>\n            <div className=\"flex mb-5\">\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  type=\"radio\"\n                  id=\"e1\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"En servicio\", true);\n                  }}\n                  name=\"push-notifications\"\n                  defaultChecked={true}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e1\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  En servicio\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  onChange={(e) => {\n                    inputRadioSet(\n                      e.target.checked,\n                      \"Fuera de servicio por mantenimiento\",\n                      false\n                    );\n                  }}\n                  type=\"radio\"\n                  id=\"e2\"\n                  name=\"push-notifications\"\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e2\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Fuera de servicio por mantenimiento\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  id=\"e3\"\n                  type=\"radio\"\n                  name=\"push-notifications\"\n                  onChange={(e) => {\n                    inputRadioSet(\n                      e.target.checked,\n                      \"Fuera de servicio por afectaciones externas\",\n                      false\n                    );\n                  }}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e3\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Fuera de servicio por afectaciones externas\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  type=\"radio\"\n                  id=\"e4\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Siniestrado\", false);\n                  }}\n                  name=\"push-notifications\"\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e4\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Siniestrado\n                </label>\n              </div>\n            </div>\n            <div className=\"flex\">\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  id=\"e5\"\n                  type=\"radio\"\n                  name=\"push-notifications\"\n                  onChange={(e) => {\n                    inputRadioSet(\n                      e.target.checked,\n                      \"Fuera de servicio por disponibilidad de refaccionamiento\",\n                      false\n                    );\n                  }}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e5\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Fuera de servicio por disponibilidad de refaccionamiento\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  id=\"e6\"\n                  type=\"radio\"\n                  name=\"push-notifications\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"En avería\", false);\n                  }}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e6\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  En avería\n                </label>\n              </div>\n            </div>\n          </div>\n          <button\n            onClick={onSubmit}\n            type=\"button\"\n            className=\"absolute inline-flex items-center px-4 pt-4 pb-3 text-base text-white border border-transparent rounded-full shadow-sm bottom--20 right-32 font-objetive-medium bg-app-purple-btn hover:bg-red-500 focus:outline-none \"\n          >\n            Guardar y cargar\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EquipmentCreate;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/historic/create.js",["306","307","308","309","310","311"],"import { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  ChevronLeftIcon,\n  DocumentDownloadIcon,\n  TrashIcon\n} from \"@heroicons/react/outline\";\nimport { useSelector } from \"react-redux\";\nimport InputDataList from \"../../../../components/form/textInput/datalist\";\nimport TextInput from \"../../../../components/form/textInput\";\nimport { useDropzone } from \"react-dropzone\";\nimport ItemSelectorWithIcon from \"../../../../components/form/itemSelectorWithIcon\";\nimport Navbar from \"../../../../@app/navbar\";\nimport Table from \"../table\";\nimport Alert from \"../../../../components/alert\";\nimport { backendUrl } from \"../../../../config\";\n\nconst EquipmentCreate = () => {\n  const userSelector = useSelector((store) => store.user);\n  const [data, setData] = useState([]);\n  const [nameEquipo, setNameEquipo] = useState(\"\");\n  const [nameEquipoError, setNameEquipoError] = useState(false);\n  const [linea, setLinea] = useState(\"\");\n  const [lineaError, setLineaError] = useState(false);\n  const [estacion, setEstacion] = useState(\"\");\n  const [estacionError, setEstacionError] = useState(false);\n  const [empresa, setEmpresa] = useState(\"\");\n  const [empresaId, setEmpresaId] = useState(\"\");\n  const [empresaError, setEmpresaError] = useState(false);\n  const [dataLineas, setDataLineas] = useState([]);\n  const [dataEquipos, setDataEquipos] = useState([]);\n  const [dataEstaciones, setDataEstaciones] = useState([]);\n  const [dataList, setDataList] = useState([]);\n  const [dataListEquipo, setDataListEquipo] = useState([]);\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [file, setFile] = useState([]);\n  let history = useHistory();\n\n\n\n  const onDrop = useCallback(acceptedFiles => {\n    setFile([...file, ...acceptedFiles])\n  }, [file])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"application/pdf\",\n  });\n\n  const files = file.map((file) => (\n    <div key={file.path}>{file.path}</div>\n  ));\n\n  const deleteFile = () => {\n    setFile([])\n  };\n\n  const onChangeNameEquipo = (value) => {\n    setNameEquipo(value);\n    setNameEquipoError(false);\n\n    const result = dataEquipos.filter((equipo) => {\n      return equipo.identificacion === value;\n    });\n\n    setEmpresa(result.length > 0 ? result[0].empresa.name : \"\");\n    setEmpresaId(result.length > 0 ? result[0].empresa.id : \"\");\n  };\n\n  const successAlertHandler = () => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n      history.push(\"/equipment/activity\");\n    }, 1500);\n  };\n\n  const onSubmit = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    let errNameEquipo = false;\n    let errLinea = false;\n    let errEstacion = false;\n    let errEmpresa = false;\n\n    if (nameEquipo.length < 1) {\n      setNameEquipoError(true);\n      errNameEquipo = true;\n    }\n\n    if (linea.length < 1) {\n      setLineaError(true);\n      errLinea = true;\n    }\n\n    if (estacion.length < 1) {\n      setEstacionError(true);\n      errEstacion = true;\n    }\n\n    if (empresa.length < 1) {\n      setEmpresaError(true);\n      errEmpresa = true;\n    }\n\n    if (!errNameEquipo && !errLinea && !errEstacion && !errEmpresa) {\n      try {\n        const formData = new FormData();\n        formData.append(\"equipo\", nameEquipo);\n        formData.append(\"linea\", linea);\n        formData.append(\"estacion\", estacion);\n        formData.append(\"empresa\", empresaId);\n        formData.append(\"pdf\", file[0]);\n\n        await axios({\n          method: \"POST\",\n          url: `${backendUrl}/historico`,\n          data: formData,\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n            \"Content-Type\":\n              \"multipart/form-data boundary=\" +\n              Math.random().toString().substr(2),\n          },\n        });\n        setNameEquipo(\"\");\n        setLinea(\"\");\n        setEstacion(\"\");\n        setEmpresa(\"\");\n        toast.dismiss(toastLoading);\n        successAlertHandler();\n      } catch {\n        toast.dismiss(toastLoading);\n        toast.error(\"Error al cargar el equipo!\");\n      }\n    }\n    toast.dismiss(toastLoading);\n  };\n\n  const [refreshEstacion, setRefreshEstacion] = useState(\"\");\n\n  const handleSelectLinea = (value) => {\n    setNameEquipo(\"\"); // para borrar el nombre de equipo alc ambiar linea\n    const result = dataEstaciones.filter((estacion) => {\n      return estacion.linea === value;\n    });\n    setLinea(value);\n    setEstacion(\"\");\n    setRefreshEstacion(result);\n  };\n\n  const dumb = () => {};\n\n  const handleSelectEstacion = (value) => {\n    setEstacion(value);\n    setNameEquipo(\"\"); // para borrar el nombre de equipo alc ambiar estacion\n    const result = dataEquipos.filter((equipo) => {\n      return equipo.estacion.id === value;\n    });\n    setDataListEquipo(result);\n  };\n\n  const sendToTrash = async (id) => {\n    console.log(id);\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      await axios({\n        method: \"PUT\",\n        url: `${backendUrl}/actividad/trash/${id}`,\n        data: { state: true },\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      getActivityData();\n      toast.dismiss(toastLoading);\n      toast.success(\"Registro enviado a la papelera!\");\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al enviar a la papelera!\");\n    }\n  };\n\n  const [activityData, setActivityData] = useState([]);\n  const getActivityData = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      setActivityData(res.data);\n      toast.dismiss(toastLoading);\n    } catch (e) {\n      toast.dismiss(toastLoading);\n    }\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/user/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res2 = await axios.get(`${backendUrl}/linea/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res3 = await axios.get(`${backendUrl}/estacion/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res4 = await axios.get(`${backendUrl}/equipo/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      const res7 = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      setActivityData(res7.data);\n\n      const sanitize = res.data.filter((user) => {\n        return user.role === \"Empresa\";\n      });\n\n      setData(sanitize);\n      setDataLineas(res2.data);\n      setDataEstaciones(res3.data);\n      setDataEquipos(res4.data);\n      toast.dismiss(toastLoading);\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al conectarse al servidor!\");\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      {successAlert ? <Alert text=\"Historico cargado\" /> : null}\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Registro de mantenimiento\" />\n      <div className=\"px-20 pb-20 vp-desktop\">\n        <div className=\"flex items-end justify-end mt-14\">\n          <div className=\"flex\">\n            <Link to=\"/equipment/activity\">\n              <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n            </Link>\n            <Link className=\"font-objetive-medium\" to=\"/equipment/activity\">\n              Volver\n            </Link>\n          </div>\n        </div>\n        <div className=\"relative w-full px-10 pt-10 pb-24 mt-6 bg-gray-100 rounded-3xl\">\n          <h1 className=\"mb-6 text-xl font-objetive-bold\">\n            Cargar PDF datos histórico\n          </h1>\n          <div className=\"flex\">\n            <div className=\"flex flex-1\">\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={dataLineas}\n                  text=\"Línea\"\n                  eventHandler={handleSelectLinea}\n                  value={linea}\n                />\n              </div>\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={refreshEstacion}\n                  text=\"Estacion\"\n                  eventHandler={handleSelectEstacion}\n                  value={estacion}\n                />\n              </div>\n            </div>\n            <div className=\"flex-1 pl-14\">\n              <InputDataList\n                placeholder=\"Nombre del equipo\"\n                error={nameEquipoError}\n                eventHandler={onChangeNameEquipo}\n                disabled={estacion ? false : true}\n                data={dataListEquipo}\n                not=\"No hay equipos cargados en la estación seleccionada\"\n                id=\"empresaselect\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex mt-8\">\n            <div className=\"flex-1 pr-14\">\n              <div className=\"w-5/6\">\n                <div className=\"pl-2 mb-4 font-objetive-medium\">\n                  Mantenimiento a cargo de\n                </div>\n                <TextInput\n                  placeholder=\"Empresa\"\n                  error={empresaError}\n                  eventHandler={dumb}\n                  value={empresa}\n                  disabled={true}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col flex-1 mt-4 ml-2\">\n              <div {...getRootProps({ className: \"dropzone\" })}>\n                <input {...getInputProps()} />\n                <div className=\"flex items-center mr-10 cursor-pointer\">\n                  <div className=\"w-20 h-20 flex justify-center align-middle content-center items-center bg-gray-300 rounded-xl\">\n                    <DocumentDownloadIcon className=\"w-10 h-10 text-gray-700\" />\n                  </div>\n                  <div className=\"ml-2\">\n                    <h3 className=\"underline font-objetive-bold text-app-violet-300\">\n                      Seleccionar pdf\n                    </h3>\n                    <h4 className=\"text-sm text-gray-700 font-objetive-regular w-52\">\n                      {files.length > 0 ? files : \"No se selecciono un pdf\"}\n                    </h4>\n                  </div>\n                </div>\n              </div>\n              {files.length > 0 ? (\n                <div\n                  onClick={deleteFile}\n                  className=\"flex items-center justify-center w-20 h-5 mt-2 bg-red-600 cursor-pointer rounded-xl\"\n                >\n                  <TrashIcon className=\"w-4 h-4 text-white\" />\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <button\n            onClick={onSubmit}\n            type=\"button\"\n            className=\"absolute inline-flex items-center px-4 pt-4 pb-3 text-base text-white border border-transparent rounded-full shadow-sm bottom--20 right-32 font-objetive-medium bg-app-purple-btn hover:bg-red-500 focus:outline-none \"\n          >\n            Guardar y cargar\n          </button>\n        </div>\n\n        <div className=\"mt-20\">\n          <Table data={activityData} sendToTrash={sendToTrash} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EquipmentCreate;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/list.js",["312"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport Navbar from \"../../@app/navbar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { logout } from \"../../redux/ducks/user\";\nimport Table from \"../../components/users/table/equipos\";\nimport TableOrderPagination from \"../../components/tableOrderPagination\";\nimport useOrderTable from \"../../hooks/useOrderTable\";\nimport { backendUrl } from \"../../config\";\n\nconst MAX_CANT_ROW = 7;\n\nconst EquipmentList = () => {\n  const userSelector = useSelector((store) => store.user);\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [pagination, setPagination] = useState(1);\n\n  const changeData = (dataLocal) => {\n    setData(dataLocal);\n  };\n\n  const { dataOrdered, sortTable } = useOrderTable({\n    data,\n    initProperty: \"createdAt\",\n  });\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/equipo/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      setData(res.data);\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      if (error.response) {\n        if (error.response.status === 401) {\n          dispatch(logout(history));\n        }\n      }\n    }\n  };\n\n  const newPagination = (newPaginationValue) => {\n    setPagination(newPaginationValue);\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <div className=\"relative\">\n        <Navbar title=\"Listado de equipos\" />\n        <div className=\"absolute right-28 -bottom-12\">\n          <Link\n            to=\"/equipment/create\"\n            className=\"px-6 py-4 text-white rounded-full bg-app-violet-300 font-objetive-bold\"\n          >\n            Cargar nuevo equipo\n          </Link>\n        </div>\n      </div>\n      <div className=\"px-20 pt-20 pb-10 vp-desktop\">\n        <Table\n          data={dataOrdered}\n          pagination={pagination}\n          maxCantRow={MAX_CANT_ROW}\n          changeData={changeData}\n        />\n        <TableOrderPagination\n          pagination={pagination}\n          newPagination={newPagination}\n          cantElements={data.length}\n          maxCantRow={MAX_CANT_ROW}\n          order={{ sortTable, alphabetic: \"name\", date: \"createdAt\" }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default EquipmentList;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/edit.js",["313","314","315","316"],"import { useEffect, useState, forwardRef } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ChevronLeftIcon, CalendarIcon } from \"@heroicons/react/outline\";\nimport InputDataList from \"../../../components/form/textInput/datalist\";\nimport { useSelector } from \"react-redux\";\nimport NumberPick from \"../../../components/form/numberPick\";\nimport ItemSelectorWithIcon from \"../../../components/form/itemSelectorWithIcon\";\nimport TextInput from \"../../../components/form/textInput\";\nimport Navbar from \"../../../@app/navbar\";\nimport DatePicker from \"react-datepicker\";\nimport Table from \"./table\";\nimport Alert from \"../../../components/alert\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { backendUrl } from \"../../../config\";\n\nconst EquipmentCreate = (props) => {\n  const { id } = props.location.state;\n  const userSelector = useSelector((store) => store.user);\n  const [data, setData] = useState([]);\n  const [nameEquipo, setNameEquipo] = useState(\"\");\n  const [nameEquipoError, setNameEquipoError] = useState(false);\n  const [linea, setLinea] = useState(\"\");\n  const [lineaError, setLineaError] = useState(false);\n  const [estacion, setEstacion] = useState(\"\");\n  const [estacionError, setEstacionError] = useState(false);\n  const [empresa, setEmpresa] = useState(\"\");\n  const [empresaId, setEmpresaId] = useState(\"\");\n  const [empresaError, setEmpresaError] = useState(false);\n  const [dataLineas, setDataLineas] = useState([]);\n  const [dataEquipos, setDataEquipos] = useState([]);\n  const [dataEstaciones, setDataEstaciones] = useState([]);\n  const [estado, setEstado] = useState(\"Mantenimiento preventivo\");\n  const [detalle, setDetalle] = useState(\"\");\n  const [days, setDays] = useState(1);\n  const [detalleError, setDetalleError] = useState(\"\");\n  const [startDate, setStartDate] = useState(new Date());\n  const [dataListEquipo, setDataListEquipo] = useState([]);\n  const [successAlert, setSuccessAlert] = useState(false);\n\n  let history = useHistory();\n\n  const onChangeDetalles = (value) => {\n    setDetalle(value);\n    setDetalleError(false);\n  };\n\n  const onChangeNameEquipo = (value) => {\n    setNameEquipo(value);\n    setNameEquipoError(false);\n\n    const result = dataEquipos.filter((equipo) => {\n      return equipo.identificacion === value;\n    });\n\n    setEmpresa(result.length > 0 ? result[0].empresa.name : \"\");\n    setEmpresaId(result.length > 0 ? result[0].empresa.id : \"\");\n  };\n\n  const handleDays = (value) => {\n    setDays(value);\n  };\n\n  const sendToTrash = async (id) => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      await axios({\n        method: \"PUT\",\n        url: `${backendUrl}/actividad/trash/${id}`,\n        data: { state: true },\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      getActivityData();\n      toast.dismiss(toastLoading);\n      toast.success(\"Registro enviado a la papelera!\");\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al enviar a la papelera!\");\n    }\n  };\n\n  const ExampleCustomInput = forwardRef(({ value, onClick }, ref) => (\n    <button\n      className=\"flex justify-between font-objetive-medium pt-4 pb-3 pl-6 pr-2 bg-white sm:text-sm rounded-full border border-gray-300\"\n      onClick={onClick}\n      ref={ref}\n    >\n      {value} <CalendarIcon className=\"w-5 h-5 ml-8 mr-2 text-gray-700 pb-1\" />\n    </button>\n  ));\n\n  const successAlertHandler = () => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n      history.push(\"/equipment/activity\");\n    }, 1500);\n  };\n\n  const onSubmit = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    let errNameEquipo = false;\n    let errLinea = false;\n    let errEstacion = false;\n    let errEmpresa = false;\n\n    if (nameEquipo.length < 1) {\n      setNameEquipoError(true);\n      errNameEquipo = true;\n    }\n\n    if (linea.length < 1) {\n      setLineaError(true);\n      errLinea = true;\n    }\n\n    if (estacion.length < 1) {\n      setEstacionError(true);\n      errEstacion = true;\n    }\n\n    if (empresa.length < 1) {\n      setEmpresaError(true);\n      errEmpresa = true;\n    }\n\n    if (!errNameEquipo && !errEmpresa & !errLinea && !errEstacion) {\n      try {\n        await axios({\n          method: \"PUT\",\n          url: `${backendUrl}/actividad/${id}`,\n          data: {\n            empresa: empresaId,\n            equipo: nameEquipo,\n            linea: linea,\n            estacion: estacion,\n            tipo: estado,\n            detalles: detalle,\n            fecha: startDate,\n            dias: days,\n          },\n          headers: { Authorization: `Bearer ${userSelector.user.jwtToken}` },\n        });\n        setNameEquipo(\"\");\n        setLinea(\"\");\n        setEstacion(\"\");\n        setEmpresa(\"\");\n        setDays(1);\n        setDetalle(\"\");\n\n        toast.dismiss(toastLoading);\n        successAlertHandler();\n      } catch {\n        toast.dismiss(toastLoading);\n        toast.error(\"Error al crear el registro!\");\n      }\n    }\n    toast.dismiss(toastLoading);\n  };\n\n  const [refreshEstacion, setRefreshEstacion] = useState(\"\");\n  const handleSelectLinea = (value) => {\n    setEmpresa(\"\");\n    const result = dataEstaciones.filter((estacion) => {\n      return estacion.linea === value;\n    });\n    setLinea(value);\n    setEstacion(\"\");\n    setRefreshEstacion(result);\n  };\n\n  const handleSelectEstacion = (value) => {\n    setEstacion(value);\n    setNameEquipo(\"\");\n    const result = dataEquipos.filter((equipo) => {\n      return equipo.estacion.id === value;\n    });\n    setDataListEquipo(result);\n  };\n\n  const dumb = () => {};\n\n  const [activityData, setActivityData] = useState([]);\n  const getActivityData = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res.data.filter((actividad) => {\n          return actividad.empresa.id === userSelector.user.id;\n        });\n        setActivityData(result);\n      } else {\n        setActivityData(res.data);\n      }\n      toast.dismiss(toastLoading);\n    } catch (e) {\n      toast.dismiss(toastLoading);\n    }\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/user/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res2 = await axios.get(`${backendUrl}/linea/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res3 = await axios.get(`${backendUrl}/estacion/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res4 = await axios.get(`${backendUrl}/equipo/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      const res7 = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res7.data.filter((actividad) => {\n          return actividad.empresa.id === userSelector.user.id;\n        });\n        setActivityData(result);\n      } else {\n        setActivityData(res7.data);\n      }\n\n      const sanitize = res.data.filter((user) => {\n        return user.role === \"Empresa\";\n      });\n\n      setData(sanitize);\n      setDataLineas(res2.data);\n      setDataEstaciones(res3.data);\n      setDataEquipos(res4.data);\n\n      const res5 = await axios.get(\n        `${backendUrl}/actividad/${id}`,\n        {\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n          },\n        }\n      );\n\n      setDays(res5.data.dias);\n      setDetalle(res5.data.detalles);\n      setEmpresa(res5.data.empresa.name);\n      setEmpresaId(res5.data.empresa.id);\n      const date = new Date(res5.data.fecha);\n      setStartDate(date.getTime());\n      setLinea(res5.data.linea);\n\n      const result = res3.data.filter((estacion) => {\n        return estacion.linea === res5.data.linea;\n      });\n\n      setRefreshEstacion(result);\n      setEstacion(res5.data.estacion);\n\n      setNameEquipo(res5.data.equipo.identificacion);\n      // empresa: empresa,\n      //       equipo: nameEquipo,\n      //       linea: linea,\n      //       estacion: estacion,\n      //       tipo: estado,\n      //       detalles: detalle,\n      //       fecha: startDate,\n      //       dias: days,\n\n      toast.dismiss(toastLoading);\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al conectarse al servidor!\");\n    }\n  };\n\n  const inputRadioSet = (checked, estado, funcionando) => {\n    if (checked) {\n      setEstado(estado);\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, [id]);\n\n  return (\n    <>\n      {successAlert ? <Alert text=\"Registro editado\" /> : null}\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Registro de mantenimiento\" />\n      <div className=\"px-20 pb-20 vp-desktop\">\n        <div className=\"flex items-end justify-end mt-14\">\n          <div className=\"flex\">\n            {userSelector.user.role === \"Admin\" ? (\n              <>\n                <Link to=\"/equipment/activity\">\n                  <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n                </Link>\n                <Link className=\"font-objetive-medium\" to=\"/equipment/activity\">\n                  Volver\n                </Link>\n              </>\n            ) : (\n              <>\n                <Link to=\"/equipment/activity/empresa/create\">\n                  <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n                </Link>\n                <Link\n                  className=\"font-objetive-medium\"\n                  to=\"/equipment/activity/empresa/create\"\n                >\n                  Volver\n                </Link>\n              </>\n            )}\n          </div>\n        </div>\n        <div className=\"relative w-full px-10 pt-10 pb-24 mt-6 bg-gray-100 rounded-3xl\">\n          <h1 className=\"text-xl font-objetive-bold mb-6\">\n            Editar registro de actividad\n          </h1>\n          <div className=\"flex\">\n            <div className=\"flex flex-1\">\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={dataLineas}\n                  text=\"Línea\"\n                  disabled={true}\n                  eventHandler={handleSelectLinea}\n                  value={linea}\n                />\n              </div>\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={refreshEstacion}\n                  text=\"Estacion\"\n                  disabled={true}\n                  eventHandler={handleSelectEstacion}\n                  value={estacion}\n                />\n              </div>\n            </div>\n            <div className=\"flex-1 pl-14\">\n              <InputDataList\n                placeholder=\"Nombre del equipo\"\n                error={nameEquipoError}\n                eventHandler={onChangeNameEquipo}\n                value={nameEquipo}\n                disabled={true}\n                data={dataListEquipo}\n                not=\"No hay equipos cargados en la estación seleccionada\"\n                id=\"empresaselect\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <h3 className=\"mb-4 mt-10 font-objetive-medium\">\n              Tipo de actividad para registrar\n            </h3>\n            <div className=\"flex mb-8\">\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  type=\"radio\"\n                  id=\"e1\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Mantenimiento preventivo\");\n                  }}\n                  name=\"push-notifications\"\n                  defaultChecked={true}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e1\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Mantenimiento preventivo\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Mantenimiento correctivo\");\n                  }}\n                  type=\"radio\"\n                  id=\"e2\"\n                  name=\"push-notifications\"\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e2\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Mantenimiento correctivo\n                </label>\n              </div>\n              <div className=\"flex items-center mr-5 create-equipment\">\n                <input\n                  id=\"e3\"\n                  type=\"radio\"\n                  name=\"push-notifications\"\n                  onChange={(e) => {\n                    inputRadioSet(e.target.checked, \"Averías\");\n                  }}\n                  className=\"w-3 h-3 text-gray-300 border-gray-900 rounded-full focus:ring-transparent\"\n                />\n                <label\n                  htmlFor=\"e3\"\n                  className=\"block pt-1 ml-2 text-sm text-gray-800 font-objetive-medium\"\n                >\n                  Averías\n                </label>\n              </div>\n            </div>\n          </div>\n\n          <TextInput\n            placeholder=\"Detalles de la actividad\"\n            eventHandler={onChangeDetalles}\n            error={detalleError}\n            value={detalle}\n          />\n\n          <div className=\"flex mt-8 justify-between\">\n            <div className=\"w-2/5\">\n              <div className=\"pl-2 mb-4 font-objetive-medium\">\n                Empresa a cargo del mantenimiento\n              </div>\n              <div className=\"w-60\">\n                <TextInput\n                  placeholder=\"Empresa\"\n                  error={empresaError}\n                  eventHandler={dumb}\n                  value={empresa}\n                  disabled={true}\n                />\n              </div>\n            </div>\n            <div className=\"w-1/4 mr-10\">\n              <div className=\"pl-2 mb-4 font-objetive-medium\">\n                Fecha de registro\n              </div>\n              <DatePicker\n                selected={startDate}\n                onChange={(date) => setStartDate(date)}\n                customInput={<ExampleCustomInput />}\n              />\n            </div>\n\n            <div className=\"w-2/4 mr-4\">\n              <div className=\"pl-2 mb-4 font-objetive-medium\">\n                Cantidad de días que tomo el arreglo\n              </div>\n              <div className=\"w-32\">\n                <NumberPick eventHandler={handleDays} value={days} />\n              </div>\n            </div>\n          </div>\n\n          <button\n            onClick={onSubmit}\n            type=\"button\"\n            className=\"absolute inline-flex items-center px-4 pt-4 pb-3 text-base text-white border border-transparent rounded-full shadow-sm bottom--20 right-32 font-objetive-medium bg-app-purple-btn hover:bg-red-500 focus:outline-none \"\n          >\n            Guardar edición\n          </button>\n        </div>\n\n        <div className=\"mt-20\">\n          <Table data={activityData} sendToTrash={sendToTrash} selected={id} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EquipmentCreate;\n","/Users/augusto/Desktop/proyeco-front/src/views/trash/empresa.js",["317"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../@app/navbar\";\nimport { useSelector } from \"react-redux\";\nimport Table from \"./table\";\nimport Swal from \"sweetalert2\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { backendUrl } from \"../../config\";\n\nconst Trash = () => {\n  const userSelector = useSelector((store) => store.user);\n  const [data, setData] = useState([]);\n\n  const alert = (id, tag) => {\n    Swal.fire({\n      title: \"¿Eliminar de forma permanente?\",\n      showCancelButton: true,\n      html: \"Se eliminaran todos los datos asociados\",\n      confirmButtonText: \"Eliminar\",\n      cancelButtonText: \"Cancelar\",\n      customClass: {\n        container: 'sw-container',\n        title: 'sw-title text-lg font-objetive-bold',\n        confirmButton: 'sw-confirm font-objetive-bold',\n        cancelButton: 'sw-cancel font-objetive-bold',\n        htmlContainer: 'sw-html font-objetive-medium'\n      }\n    }).then((result) => {\n      if (result.isConfirmed) {\n        deleteItem(id, tag);\n      }\n    });\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res2 = await axios.get(\n        `${backendUrl}/actividad/trash/get`,\n        {\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n          },\n        }\n      );\n      setData(res2.data);\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al conectarse al servidor!\");\n    }\n  };\n\n  const removeFromTrash = async (id, tag) => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      await axios({\n        method: \"PUT\",\n        url: `${backendUrl}/${tag.toLowerCase()}/trash/${id}`,\n        data: { state: false },\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      toast.dismiss(toastLoading);\n      toast.success(\"Restaurado con éxito!\");\n      consult();\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al restaurar!\");\n    }\n  };\n\n  const deleteItem = async (id, tag) => {\n    const toastLoading = toast.loading(\"Eliminando...\");\n    try {\n      await axios({\n        method: \"DELETE\",\n        url: `${backendUrl}/${tag.toLowerCase()}/${id}`,\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      toast.dismiss(toastLoading);\n      toast.success(\"Eliminado con éxito!\");\n      consult();\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al eliminar!\");\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Papelera\" />\n      <div className=\"px-20 pt-20 pb-10 vp-desktop\">\n        <h3 className=\"mb-2 font-objetive-bold\">Papelera</h3>\n        <div className=\"my-4 space-x-10 text-base font-objetive-bold text-app-purple-300\">\n          <button className=\"text-app-purple-300 font-objetive-bold\">\n            Todos\n          </button>\n        </div>\n        <Table data={data} removeFromTrash={removeFromTrash} alert={alert} />\n      </div>\n    </>\n  );\n};\n\nexport default Trash;\n","/Users/augusto/Desktop/proyeco-front/src/views/alerts/create.js",["318"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport TextInput from \"../../components/form/textInput\";\nimport InputDataList from \"../../components/form/textInput/datalist\";\nimport ItemSelectorWithIcon from \"../../components/form/itemSelectorWithIcon\";\nimport { logout } from \"../../redux/ducks/user\";\nimport Alert from \"../../components/alert\";\nimport Navbar from \"../../@app/navbar\";\nimport { backendUrl } from \"../../config\";\n\nconst EquipmentCreate = () => {\n  const userSelector = useSelector((store) => store.user);\n  const [nameEquipo, setNameEquipo] = useState(\"\");\n  const [nameEquipoError, setNameEquipoError] = useState(false);\n  const [nameDest, setNameDest] = useState(\"\");\n  const [nameDestError, setNameDestError] = useState(false);\n  const [asunto, setAsunto] = useState(\"\");\n  const [asuntoError, setAsuntoError] = useState(false);\n  const [mensaje, setMensaje] = useState(\"\");\n  const [mensajeError, setMensajeError] = useState(false);\n  const [dataUser, setDataUser] = useState([]);\n  const [dataEquipo, setDataEquipo] = useState([]);\n  const [dataLinea, setDataLinea] = useState([]);\n  const [dataEstacion, setDataEstacion] = useState([]);\n  const [linea, setLinea] = useState(\"\");\n  const [estacion, setEstacion] = useState(\"\");\n  const [dataListEquipo, setDataListEquipo] = useState([]);\n  const [successAlert, setSuccessAlert] = useState(false);\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const onChangeNameEquipo = (value) => {\n    setNameEquipo(value);\n    setNameEquipoError(false);\n  };\n\n  const onChangeNameDest = (value) => {\n    setNameDest(value);\n    setNameDestError(false);\n  };\n\n  const onChangeAsunto = (value) => {\n    setAsunto(value);\n    setAsuntoError(false);\n  };\n\n  const onChangeMensaje = (e) => {\n    setMensaje(e.target.value);\n    setMensajeError(false);\n  };\n\n  const successAlertHandler = () => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n      history.push(\"/alerts\");\n    }, 1500);\n  };\n\n  const [refreshEstacion, setRefreshEstacion] = useState(\"\");\n  const handleSelectLinea = (value) => {\n    const result = dataEstacion.filter((estacion) => {\n      return estacion.linea === value;\n    });\n    setLinea(value);\n    setEstacion(\"\");\n    setNameEquipo(\"\");\n    setRefreshEstacion(result);\n  };\n\n  const handleSelectEstacion = (value) => {\n    setEstacion(value);\n    setNameEquipo(\"\");\n    const result = dataEquipo.filter((equipo) => {\n      return equipo.estacion.id === value;\n    });\n    setDataListEquipo(result);\n  };\n\n  const onSubmit = async () => {\n    let errNameEquipo = false;\n    let errNameDest = false;\n    let errAsunto = false;\n    let errMensaje = false;\n\n    if (nameEquipo.length < 1) {\n      setNameEquipoError(true);\n      errNameEquipo = true;\n    }\n\n    if (nameDest.length < 1) {\n      setNameDestError(true);\n      errNameDest = true;\n    }\n\n    if (asunto.length < 1) {\n      setAsuntoError(true);\n      errAsunto = true;\n    }\n\n    if (mensaje.length < 1) {\n      setMensajeError(true);\n      errMensaje = true;\n    }\n\n    if (!errNameEquipo && !errNameDest && !errAsunto && !errMensaje) {\n      const toastLoading = toast.loading(\"Cargando...\");\n\n      try {\n        await axios.post(\n          `${backendUrl}/alerta`,\n          {\n            equipo: nameEquipo,\n            linea: linea,\n            estacion: estacion,\n            from: userSelector.user.name,\n            to: nameDest,\n            asunto: asunto,\n            mensaje: mensaje,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${userSelector.user.jwtToken}`,\n            },\n          }\n        );\n        setNameDest(\"\");\n        setNameEquipo(\"\");\n        setAsunto(\"\");\n        setMensaje(\"\");\n        toast.dismiss(toastLoading);\n        successAlertHandler();\n      } catch {\n        toast.dismiss(toastLoading);\n        toast.error(\"Error al crear la alerta\");\n      }\n      toast.dismiss(toastLoading);\n    }\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/user/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res2 = await axios.get(`${backendUrl}/linea/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res3 = await axios.get(`${backendUrl}/estacion/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res4 = await axios.get(`${backendUrl}/equipo/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      setDataUser(res.data);\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res4.data.filter((equipo) => {\n          return equipo.empresa.id === userSelector.user.id;\n        });\n        setDataEquipo(result);\n      } else {\n        setDataEquipo(res4.data);\n      }\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res2.data.filter((linea) => {\n          return linea.empresas.includes(userSelector.user.id);\n        });\n        setDataLinea(result);\n      } else {\n        setDataLinea(res2.data);\n      }\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res3.data.filter((estacion) => {\n          return estacion.empresas.includes(userSelector.user.id);\n        });\n        setDataEstacion(result);\n      } else {\n        setDataEstacion(res3.data);\n      }\n\n      // setDataEquipo(res4.data);\n      // setDataLinea(res2.data);\n      // setDataEstacion(res3.data);\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      if (error.response) {\n        if (error.response.status === 401) {\n          dispatch(logout(history));\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      {successAlert ? <Alert text=\"Alerta enviada\" /> : null}\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Proyeco\" subtitle=\"Seguimiento, control y mantenimiento\" />\n      <div className=\"px-20 pb-20 vp-desktop\">\n        <div className=\"relative w-full px-10 pt-10 pb-24 bg-gray-100 mt-14 rounded-3xl\">\n          <h1 className=\"mt-2 mb-8 text-xl text-red-500 font-objetive-bold\">\n            Emitir nueva alerta\n          </h1>\n          <div className=\"flex\">\n            <div className=\"flex-1\">\n              <div className=\"mb-4 font-objetive-medium\">\n                Seleccione equipos comprometidos\n              </div>\n              <div className=\"flex flex-1\">\n                <div className=\"flex-1 pr-6\">\n                  <ItemSelectorWithIcon\n                    text=\"Linea\"\n                    error={false}\n                    data={dataLinea}\n                    eventHandler={handleSelectLinea}\n                    value={linea}\n                  />\n                </div>\n                <div className=\"flex-1 pr-6\">\n                  <ItemSelectorWithIcon\n                    text=\"Estacion\"\n                    error={false}\n                    data={refreshEstacion}\n                    eventHandler={handleSelectEstacion}\n                    value={estacion}\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-1 mb-6\">\n              <div className=\"flex-1 pl-6\">\n                <div className=\"mb-4 font-objetive-medium\">De:</div>\n                <div className=\"pt-4 font-objetive-bold\">\n                  {userSelector.user.name}\n                </div>\n              </div>\n              <div className=\"w-3/5 \">\n                <div className=\"pl-2 mb-4 font-objetive-medium\">Para:</div>\n                <InputDataList\n                  placeholder=\"Nombre del destinatario\"\n                  error={nameDestError}\n                  eventHandler={onChangeNameDest}\n                  data={dataUser}\n                  not=\"No hay usuarios cargados\"\n                  id=\"usuarioselect\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex mb-6\">\n            <div className=\"flex-1 pr-12\">\n              <InputDataList\n                placeholder=\"Nombre del equipo\"\n                error={nameEquipoError}\n                eventHandler={onChangeNameEquipo}\n                data={dataListEquipo}\n                disabled={estacion ? false : true}\n                not=\"No hay equipos cargados en la estación seleccionada\"\n                id=\"empresaselect\"\n              />\n            </div>\n            <div className=\"flex-1\">\n              <div className=\"w-full\"></div>\n            </div>\n          </div>\n\n          <div className=\"flex-1 mb-6\">\n            <TextInput\n              placeholder=\"Asunto\"\n              eventHandler={onChangeAsunto}\n              error={asuntoError}\n              value={asunto}\n            />\n          </div>\n\n          <div className=\"mt-1\">\n            <textarea\n              onChange={onChangeMensaje}\n              id=\"about\"\n              name=\"about\"\n              value={mensaje}\n              rows={8}\n              className={`w-full  font-objetive-medium pt-4 pb-3 pl-6 pr-10 shadow-sm block  sm:text-sm rounded-3xl border  ${\n                mensajeError\n                  ? \"placeholder-red-300 focus:ring-red-300 focus:border-red-300 border-red-300\"\n                  : \"placeholder-gray-800 border-gray-300 focus:ring-gray-300 focus:border-gray-300\"\n              }`}\n              placeholder=\"Mensaje de alerta\"\n            />\n          </div>\n\n          <button\n            type=\"button\"\n            onClick={onSubmit}\n            className=\"absolute inline-flex items-center px-4 pt-4 pb-3 text-base text-white border border-transparent rounded-full shadow-sm bottom--20 left-custom-alert-btn font-objetive-medium bg-app-btn-gradient focus:outline-none \"\n          >\n            Guardar y cargar\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EquipmentCreate;\n","/Users/augusto/Desktop/proyeco-front/src/views/alerts/history.js",["319"],"import { useState, useEffect } from \"react\";\nimport Navbar from \"../../@app/navbar\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport TableOrderPagination from \"../../components/tableOrderPagination\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { logout } from \"../../redux/ducks/user\";\nimport useOrderTable from \"../../hooks/useOrderTable\";\nimport Row from \"../../components/alert/row\";\nimport { backendUrl } from \"../../config\";\n\nconst MAX_CANT_ROW = 7;\n\nconst AlertHistory = () => {\n  const userSelector = useSelector((store) => store.user);\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [pagination, setPagination] = useState(1);\n  const [data, setData] = useState([]);\n  const { dataOrdered, sortTable } = useOrderTable({\n    data,\n    initProperty: \"createdAt\",\n  });\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/alerta`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res.data.filter((alerta) => {\n          return alerta.to === userSelector.user.name || alerta.to === userSelector.user.name;\n        });\n        setData(result);\n      } else {\n        setData(res.data);\n      }\n\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error\");\n      if (error.response) {\n        if (error.response.status === 401) {\n          dispatch(logout(history));\n        }\n      }\n    }\n  };\n\n  const newPagination = (newPaginationValue) => {\n    setPagination(newPaginationValue);\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Historial de alertas\" />\n      <div className=\"px-20 pt-20 pb-10 vp-desktop\">\n        <h1 className=\"mb-2 font-objetive-bold\">Últimas alertas emitidas</h1>\n        <table className=\"w-full table-auto\">\n          <tbody>\n            {dataOrdered.map((item, index) => {\n              if (\n                index < MAX_CANT_ROW * pagination &&\n                index >= pagination * MAX_CANT_ROW - MAX_CANT_ROW\n              ) {\n                return <Row key={item.id} item={item} />;\n              }\n              return null;\n            })}\n          </tbody>\n        </table>\n        <TableOrderPagination\n          pagination={pagination}\n          newPagination={newPagination}\n          cantElements={data.length}\n          maxCantRow={MAX_CANT_ROW}\n          order={{ sortTable, alphabetic: \"equipo\", date: \"createdAt\" }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default AlertHistory;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/historic/edit.js",["320","321","322","323","324","325"],"import { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  ChevronLeftIcon,\n  DocumentDownloadIcon,\n  TrashIcon,\n} from \"@heroicons/react/outline\";\nimport { useSelector } from \"react-redux\";\nimport InputDataList from \"../../../../components/form/textInput/datalist\";\nimport ItemSelector from \"../../../../components/form/itemSelector\";\nimport { useDropzone } from \"react-dropzone\";\nimport ItemSelectorWithIcon from \"../../../../components/form/itemSelectorWithIcon\";\nimport Navbar from \"../../../../@app/navbar\";\nimport Alert from \"../../../../components/alert\";\nimport Table from \"../table\";\nimport { backendUrl } from \"../../../../config\";\n\nconst EquipmentCreate = (props) => {\n  const { id } = props.location.state;\n  const userSelector = useSelector((store) => store.user);\n  const [data, setData] = useState([]);\n  const [nameEquipo, setNameEquipo] = useState(\"\");\n  const [nameEquipoError, setNameEquipoError] = useState(false);\n  const [linea, setLinea] = useState(\"\");\n  const [lineaError, setLineaError] = useState(false);\n  const [estacion, setEstacion] = useState(\"\");\n  const [estacionError, setEstacionError] = useState(false);\n  const [empresa, setEmpresa] = useState(\"\");\n  const [empresaId, setEmpresaId] = useState(\"\");\n  const [empresaError, setEmpresaError] = useState(false);\n  const [dataLineas, setDataLineas] = useState([]);\n  const [dataEquipos, setDataEquipos] = useState([]);\n  const [dataEstaciones, setDataEstaciones] = useState([]);\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [dataList, setDataList] = useState([]);\n  const [dataListEquipo, setDataListEquipo] = useState([]);\n  const [uploadadFile, setUploadadFile] = useState(\"\");\n  const [file, setFile] = useState([]);\n\n  let history = useHistory();\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFile([...file, ...acceptedFiles]);\n    },\n    [file]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"application/pdf\",\n  });\n\n  const files = file.map((file) => <div key={file.path}>{file.path}</div>);\n\n  const deleteFile = () => {\n    setUploadadFile(\"\");\n    setFile([]);\n  };\n\n  const onChangeNameEquipo = (value) => {\n    setNameEquipo(value);\n    setNameEquipoError(false);\n\n    const result = dataEquipos.filter((equipo) => {\n      return equipo.identificacion === value;\n    });\n\n    setEmpresa(result.length > 0 ? result[0].empresa.name : \"\");\n    setEmpresaId(result.length > 0 ? result[0].empresa.id : \"\");\n  };\n\n  const successAlertHandler = () => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n      history.push(\"/equipment\");\n    }, 1500);\n  };\n\n  const onSubmit = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    let errNameEquipo = false;\n    let errLinea = false;\n    let errEstacion = false;\n    let errEmpresa = false;\n\n    if (nameEquipo.length < 1) {\n      setNameEquipoError(true);\n      errNameEquipo = true;\n    }\n\n    if (linea.length < 1) {\n      setLineaError(true);\n      errLinea = true;\n    }\n\n    if (estacion.length < 1) {\n      setEstacionError(true);\n      errEstacion = true;\n    }\n\n    if (empresa.length < 1) {\n      setEmpresaError(true);\n      errEmpresa = true;\n    }\n\n    if (!errNameEquipo && !errLinea && !errEstacion && !errEmpresa) {\n      try {\n        const formData = new FormData();\n        formData.append(\"equipo\", nameEquipo);\n        formData.append(\"linea\", linea);\n        formData.append(\"estacion\", estacion);\n        formData.append(\"empresa\", empresaId);\n        formData.append(\"pdf\", file[0]);\n\n        await axios({\n          method: \"PUT\",\n          url: `${backendUrl}/historico/${id}`,\n          data: formData,\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n            \"Content-Type\":\n              \"multipart/form-data boundary=\" +\n              Math.random().toString().substr(2),\n          },\n        });\n        setNameEquipo(\"\");\n        setLinea(\"\");\n        setEstacion(\"\");\n        setEmpresa(\"\");\n        toast.dismiss(toastLoading);\n        successAlertHandler();\n      } catch {\n        toast.dismiss(toastLoading);\n        toast.error(\"Error al cargar el equipo!\");\n      }\n    }\n  };\n\n  const [refreshEstacion, setRefreshEstacion] = useState(\"\");\n  const handleSelectLinea = (value) => {\n    setNameEquipo(\"\"); // para borrar el nombre de equipo alc ambiar linea\n    const result = dataEstaciones.filter((estacion) => {\n      return estacion.linea === value;\n    });\n    setLinea(value);\n    setEstacion(\"\");\n    setNameEquipo(\"\");\n    setRefreshEstacion(result);\n  };\n\n  const handleSelectEstacion = (value) => {\n    setEstacion(value);\n    setNameEquipo(\"\"); // para borrar el nombre de equipo alc ambiar estacion\n    const result = dataEquipos.filter((equipo) => {\n      console.log(value);\n      return equipo.estacion.id === value;\n    });\n    setDataListEquipo(result);\n  };\n\n  const handleSelectEmpresa = (value) => {\n    setEmpresa(value);\n  };\n\n  const sendToTrash = async (id) => {\n    console.log(id);\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      await axios({\n        method: \"PUT\",\n        url: `${backendUrl}/actividad/trash/${id}`,\n        data: { state: true },\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      getActivityData();\n      toast.dismiss(toastLoading);\n      toast.success(\"Registro enviado a la papelera!\");\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al enviar a la papelera!\");\n    }\n  };\n\n  const [activityData, setActivityData] = useState([]);\n  const getActivityData = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      setActivityData(res.data);\n      toast.dismiss(toastLoading);\n    } catch (e) {\n      toast.dismiss(toastLoading);\n    }\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/user/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res2 = await axios.get(`${backendUrl}/linea/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res3 = await axios.get(`${backendUrl}/estacion/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      const res4 = await axios.get(`${backendUrl}/equipo/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      const sanitize = res.data.filter((user) => {\n        return user.role === \"Empresa\";\n      });\n\n      setData(sanitize);\n      setDataLineas(res2.data);\n      setDataEstaciones(res3.data);\n      setDataEquipos(res4.data);\n\n      const res5 = await axios.get(\n        `${backendUrl}/historico/${id}`,\n        {\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n          },\n        }\n      );\n\n      setLinea(res5.data.linea);\n      setEmpresa(res5.data.empresa);\n      setUploadadFile(res5.data.key);\n      setEmpresaId(res5.data.empresa.id);\n\n      const result = res3.data.filter((estacion) => {\n        return estacion.linea === res5.data.linea;\n      });\n\n      const res7 = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n      setActivityData(res7.data);\n\n      setRefreshEstacion(result);\n      setEstacion(res5.data.estacion);\n\n      setNameEquipo(res5.data.equipo.identificacion);\n\n      toast.dismiss(toastLoading);\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al conectarse al servidor!\");\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, [id]);\n\n  return (\n    <>\n      {successAlert ? <Alert text=\"Historico cargado\" /> : null}\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Registro de mantenimiento\" />\n      <div className=\"px-20 pb-20 vp-desktop\">\n        <div className=\"flex items-end justify-end mt-14\">\n          <div className=\"flex\">\n            <Link to=\"/equipment/activity\">\n              <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n            </Link>\n            <Link className=\"font-objetive-medium\" to=\"/equipment/activity\">\n              Volver\n            </Link>\n          </div>\n        </div>\n        <div className=\"relative w-full px-10 pt-10 pb-24 mt-6 bg-gray-100 rounded-3xl\">\n          <h1 className=\"text-xl font-objetive-bold mb-6\">\n            Cargar PDF datos histórico\n          </h1>\n          <div className=\"flex\">\n            <div className=\"flex flex-1\">\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={dataLineas}\n                  text=\"Línea\"\n                  eventHandler={handleSelectLinea}\n                  value={linea}\n                  disabled={true}\n                />\n              </div>\n              <div className=\"flex-1 pr-6\">\n                <ItemSelectorWithIcon\n                  data={refreshEstacion}\n                  text=\"Estacion\"\n                  eventHandler={handleSelectEstacion}\n                  value={estacion}\n                  disabled={true}\n                />\n              </div>\n            </div>\n            <div className=\"flex-1 pl-14\">\n              <InputDataList\n                placeholder=\"Nombre del equipo\"\n                error={nameEquipoError}\n                eventHandler={onChangeNameEquipo}\n                value={nameEquipo}\n                disabled={true}\n                data={dataListEquipo}\n                not=\"No hay equipos cargados en la estación seleccionada\"\n                id=\"empresaselect\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex mt-8\">\n            <div className=\"flex-1 pr-14\">\n              <div className=\"w-5/6\">\n                <div className=\"pl-2 mb-4 font-objetive-medium\">\n                  Mantenimiento a cargo de\n                </div>\n                <ItemSelector\n                  data={data}\n                  text=\"Empresa\"\n                  eventHandler={handleSelectEmpresa}\n                  value={empresa}\n                  disabled={true}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-col flex-1 mt-4 ml-2\">\n              <div {...getRootProps({ className: \"dropzone\" })}>\n                <input {...getInputProps()} />\n                <div className=\"flex items-center mr-10 cursor-pointer\">\n                  <div className=\"w-20 h-20 flex justify-center align-middle content-center items-center bg-gray-300 rounded-xl\">\n                    <DocumentDownloadIcon className=\"w-10 h-10 text-gray-700 \" />\n                  </div>\n                  <div className=\"ml-2\">\n                    <h3 className=\"underline font-objetive-bold text-app-violet-300\">\n                      Seleccionar pdf\n                    </h3>\n                    <h4 className=\"text-sm text-gray-700 font-objetive-regular w-52\">\n                      {files.length > 0\n                        ? files\n                        : uploadadFile\n                        ? uploadadFile\n                        : \"No se selecciono un pdf\"}\n                    </h4>\n                  </div>\n                </div>\n              </div>\n              {files.length > 0 || uploadadFile ? (\n                <div\n                  onClick={deleteFile}\n                  className=\"flex items-center justify-center w-20 h-5 mt-2 bg-red-600 cursor-pointer rounded-xl\"\n                >\n                  <TrashIcon className=\"w-4 h-4 text-white\" />\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <button\n            onClick={onSubmit}\n            type=\"button\"\n            className=\"absolute inline-flex items-center px-4 pt-4 pb-3 text-base text-white border border-transparent rounded-full shadow-sm bottom--20 right-32 font-objetive-medium bg-app-purple-btn hover:bg-red-500 focus:outline-none \"\n          >\n            Guardar y cargar\n          </button>\n        </div>\n\n        <div className=\"mt-20\">\n          <Table data={activityData} sendToTrash={sendToTrash} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EquipmentCreate;\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/index.js",["326"],"/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/index.js",["327"],"import { useState, useEffect } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Navbar from \"../../../@app/navbar\";\nimport Table from \"./table\";\nimport { useSelector } from \"react-redux\";\nimport { ChevronLeftIcon } from \"@heroicons/react/outline\";\nimport { backendUrl } from \"../../../config\";\n\nconst Equipment = () => {\n  const userSelector = useSelector((store) => store.user);\n  const [data, setData] = useState([]);\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/actividad`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      setData(res.data);\n      toast.dismiss(toastLoading);\n    } catch (e) {\n      toast.dismiss(toastLoading);\n    }\n  };\n\n  const sendToTrash = async (id) => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      await axios({\n        method: \"PUT\",\n        url: `${backendUrl}/actividad/trash/${id}`,\n        data: { state: true },\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      consult();\n      toast.dismiss(toastLoading);\n      toast.success(\"Registro enviado a la papelera!\");\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al enviar a la papelera!\");\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Carga, edición y registro de equipos\" />\n      <div className=\"px-20 vp-desktop\">\n        <div className=\"flex mt-14\">\n          <Link to=\"/equipment\">\n            <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n          </Link>\n          <Link className=\"font-objetive-medium\" to=\"/equipment\">\n            Volver\n          </Link>\n        </div>\n        <div className=\"flex mt-10\">\n          <Link to=\"/equipment/activity/create\">\n            <button\n              type=\"button\"\n              className=\"px-6 pt-4 pb-3 mr-6 text-base bg-gray-200 border border-transparent rounded-full shadow-sm text-app-blue-600 right-32 font-objetive-bold focus:outline-none \"\n            >\n              Cargar nuevo registro de actividad\n            </button>\n          </Link>\n          <Link to=\"/equipment/activity/historic/create\">\n            <button\n              type=\"button\"\n              className=\"px-6 pt-4 pb-3 mr-8 text-base bg-gray-200 border border-transparent rounded-full shadow-sm text-app-blue-600 right-32 font-objetive-bold focus:outline-none\"\n            >\n              Cargar pdf historico\n            </button>\n          </Link>\n        </div>\n      </div>\n      <div className=\"px-20 pb-10 vp-desktop\">\n        <div className=\"mt-10\">\n          <Table data={data} sendToTrash={sendToTrash} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Equipment;\n","/Users/augusto/Desktop/proyeco-front/src/views/trash/index.js",["328"],"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"../../@app/navbar\";\nimport { useSelector } from \"react-redux\";\nimport Table from \"./table\";\nimport Swal from \"sweetalert2\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { backendUrl } from \"../../config\";\n\nconst Trash = () => {\n  const userSelector = useSelector((store) => store.user);\n  const [data, setData] = useState([]);\n  const [equiposData, setEquiposData] = useState([]);\n  const [actividadesData, setActividadesData] = useState([]);\n  const [seleccionado, setSeleccionado] = useState(\"Todos\");\n\n  const alert = (id, tag) => {\n    Swal.fire({\n      title: \"¿Eliminar de forma permanente?\",\n      showCancelButton: true,\n      html: \"Se eliminaran todos los datos asociados\",\n      confirmButtonText: \"Eliminar\",\n      cancelButtonText: \"Cancelar\",\n      customClass: {\n        container: 'sw-container',\n        title: 'sw-title text-lg font-objetive-bold',\n        confirmButton: 'sw-confirm font-objetive-bold',\n        cancelButton: 'sw-cancel font-objetive-bold',\n        htmlContainer: 'sw-html font-objetive-medium'\n      }\n    }).then((result) => {\n      if (result.isConfirmed) {\n        deleteItem(id, tag);\n      }\n    });\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(\n        `${backendUrl}/equipo/trash/get`,\n        {\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n          },\n        }\n      );\n      const res2 = await axios.get(\n        `${backendUrl}/actividad/trash/get`,\n        {\n          headers: {\n            Authorization: `Bearer ${userSelector.user.jwtToken}`,\n          },\n        }\n      );\n      setEquiposData(res.data);\n      setActividadesData(res2.data);\n      setData(res.data.concat(res2.data));\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al conectarse al servidor!\");\n    }\n  };\n\n  const removeFromTrash = async (id, tag) => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      await axios({\n        method: \"PUT\",\n        url: `${backendUrl}/${tag.toLowerCase()}/trash/${id}`,\n        data: { state: false },\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      toast.dismiss(toastLoading);\n      toast.success(\"Restaurado con éxito!\");\n      consult();\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al restaurar!\");\n    }\n  };\n\n  const deleteItem = async (id, tag) => {\n    const toastLoading = toast.loading(\"Eliminando...\");\n    try {\n      await axios({\n        method: \"DELETE\",\n        url: `${backendUrl}/${tag.toLowerCase()}/${id}`,\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      toast.dismiss(toastLoading);\n      toast.success(\"Eliminado con éxito!\");\n      consult();\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al eliminar!\");\n    }\n  };\n\n  const handleTodos = () => {\n    setSeleccionado(\"Todos\");\n    setData(equiposData.concat(actividadesData));\n  };\n\n  const handleActividades = () => {\n    setSeleccionado(\"Actividades\");\n    setData(actividadesData);\n  };\n\n  const handleEquipos = () => {\n    setSeleccionado(\"Equipos\");\n    setData(equiposData);\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Papelera\" />\n      <div className=\"px-20 pt-20 pb-10 vp-desktop\">\n        <h3 className=\"mb-2 font-objetive-bold\">Papelera</h3>\n        <div className=\"my-4 space-x-10 text-base font-objetive-bold text-app-purple-300\">\n          <button\n            className={` ${\n              seleccionado === \"Todos\"\n                ? \"text-app-purple-300 font-objetive-bold\"\n                : \"text-app-purple-200 font-objetive-medium\"\n            }`}\n            onClick={handleTodos}\n          >\n            Todos\n          </button>\n          <button\n            className={` ${\n              seleccionado === \"Equipos\"\n                ? \"text-app-purple-300 font-objetive-bold\"\n                : \"text-app-purple-200 font-objetive-medium\"\n            }`}\n            onClick={handleEquipos}\n          >\n            Equipos\n          </button>\n          <button\n            className={` ${\n              seleccionado === \"Actividades\"\n                ? \"text-app-purple-300 font-objetive-bold\"\n                : \"text-app-purple-200 font-objetive-medium\"\n            }`}\n            onClick={handleActividades}\n          >\n            Registros de actividad\n          </button>\n        </div>\n        <Table data={data} removeFromTrash={removeFromTrash} alert={alert} />\n      </div>\n    </>\n  );\n};\n\nexport default Trash;\n","/Users/augusto/Desktop/proyeco-front/src/views/home/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/views/users/index.js",["329","330"],"import { useEffect, useState, useCallback } from \"react\";\nimport Navbar from \"../../@app/navbar\";\nimport { ChevronLeftIcon, TrashIcon } from \"@heroicons/react/outline\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\nimport TextInput from \"../../components/form/textInput\";\nimport PasswordInput from \"../../components/form/passwordInput\";\nimport ItemSelector from \"../../components/form/itemSelector\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport axios from \"axios\";\nimport Table from \"../../components/users/table\";\nimport { useDropzone } from \"react-dropzone\";\nimport { logout } from \"../../redux/ducks/user\";\nimport { CameraIcon } from \"@heroicons/react/outline\";\nimport Swal from \"sweetalert2\";\nimport Alert from \"../../components/alert\";\nimport { backendUrl, s3BucketUrl } from \"../../config\";\n\nconst Users = () => {\n  const userSelector = useSelector((store) => store.user);\n  const [data, setData] = useState([]);\n  const [nameError, setNameError] = useState(false);\n  const [usernameError, setUsernameError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [hide, setHide] = useState(true);\n  const [role, setRole] = useState(\"\");\n  const [roleError, setRoleError] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [editable, setEditable] = useState(false);\n  const [successAlert, setSuccessAlert] = useState(false);\n  const [img, setImg] = useState(\"\");\n  const [file, setFile] = useState([]);\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFile([...file, ...acceptedFiles]);\n    },\n    [file]\n  );\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    multiple: false,\n    accept: \"image/jpeg, image/png\",\n  });\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const files = file.map((file) => <div key={file.path}>{file.path}</div>);\n\n  const [userId, setUserId] = useState(\"\");\n  const handleEdit = (id, name, role, username, image) => {\n    setEditable(true);\n    setUserId(id);\n    setName(name);\n    setRole(role);\n    setUsername(username);\n    setImg(image);\n  };\n\n  const onChangeName = (value) => {\n    setName(value);\n    setNameError(false);\n  };\n\n  const onChangeUsername = (value) => {\n    setUsername(value);\n    setUsernameError(false);\n  };\n\n  const onChangeRole = (value) => {\n    setRole(value);\n  };\n\n  const onChangePassword = (value) => {\n    setPassword(value);\n    setPasswordError(false);\n  };\n\n  const onSetHide = (value) => {\n    setHide(value);\n  };\n\n  const successAlertHandler = () => {\n    setSuccessAlert(true);\n    setTimeout(() => {\n      setSuccessAlert(false);\n    }, 1500);\n  };\n\n  const alert = (id, tag) => {\n    Swal.fire({\n      title: \"¿Eliminar de forma permanente?\",\n      showCancelButton: true,\n      html: \"Se eliminaran todos los datos asociados\",\n      confirmButtonText: \"Eliminar\",\n      cancelButtonText: \"Cancelar\",\n      customClass: {\n        container: \"sw-container\",\n        title: \"sw-title text-lg font-objetive-bold\",\n        confirmButton: \"sw-confirm font-objetive-bold\",\n        cancelButton: \"sw-cancel font-objetive-bold\",\n        htmlContainer: \"sw-html font-objetive-medium\",\n      },\n    }).then((result) => {\n      if (result.isConfirmed) {\n        deleteItem(id, tag);\n      }\n    });\n  };\n\n  const deleteItem = async (id) => {\n    const toastLoading = toast.loading(\"Eliminando...\");\n    try {\n      await axios({\n        method: \"DELETE\",\n        url: `${backendUrl}/user/${id}`,\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      toast.dismiss(toastLoading);\n      toast.success(\"Eliminado con éxito!\");\n      consult();\n    } catch {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al eliminar!\");\n    }\n  };\n\n  const onSubmit = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    let errName = false;\n    let errUser = false;\n    let errPass = false;\n\n    if (name.length < 1) {\n      setNameError(true);\n      errName = true;\n    }\n    if (username.length < 1) {\n      setUsernameError(true);\n      errUser = true;\n    }\n    if (password.length < 8 && !editable) {\n      setPasswordError(true);\n      errPass = true;\n    }\n\n    if (password.length > 0 && editable) {\n      if (password.length < 8) {\n        setPasswordError(true);\n        errPass = true;\n      }\n    }\n\n    if (editable) {\n      if (!errName && !errUser && !errPass) {\n        try {\n          const formData = new FormData();\n          formData.append(\"name\", name);\n          formData.append(\"username\", username);\n          formData.append(\"password\", password);\n          formData.append(\"role\", role);\n          formData.append(\"image\", file[0]);\n          await axios({\n            method: \"PUT\",\n            url: `${backendUrl}/user/${userId}`,\n            data: formData,\n            headers: {\n              Authorization: `Bearer ${userSelector.user.jwtToken}`,\n              \"Content-Type\":\n                \"multipart/form-data boundary=\" +\n                Math.random().toString().substr(2),\n            },\n          });\n          setName(\"\");\n          setPassword(\"\");\n          setUsername(\"\");\n          setUserId(\"\");\n          setRole(\"\");\n          setEditable(false);\n          toast.dismiss(toastLoading);\n          successAlertHandler();\n          await consult();\n        } catch {\n          toast.dismiss(toastLoading);\n          toast.error(\"Error al editar!\");\n        }\n      } else {\n        toast.dismiss(toastLoading);\n        toast.error(\"Verifique que los datos sean correctos!\");\n      }\n    } else {\n      if (!errName && !errUser && !errPass) {\n        try {\n          const formData = new FormData();\n          formData.append(\"name\", name);\n          formData.append(\"username\", username);\n          formData.append(\"password\", password);\n          formData.append(\"role\", role);\n          formData.append(\"image\", file[0]);\n          await axios({\n            method: \"POST\",\n            url: `${backendUrl}/user/register`,\n            data: formData,\n            headers: {\n              Authorization: `Bearer ${userSelector.user.jwtToken}`,\n              \"Content-Type\":\n                \"multipart/form-data boundary=\" +\n                Math.random().toString().substr(2),\n            },\n          });\n          setName(\"\");\n          setPassword(\"\");\n          setUsername(\"\");\n          toast.dismiss(toastLoading);\n          successAlertHandler();\n          await consult();\n        } catch {\n          toast.dismiss(toastLoading);\n          toast.error(\"Nombre de usuario duplicado!\");\n        }\n      } else {\n        toast.dismiss(toastLoading);\n        toast.error(\"Verifique que los datos sean correctos!\");\n      }\n    }\n  };\n\n  const deleteImg = () => {\n    setImg(\"\");\n    if (files.length > 0) {\n      setFile([]);\n    }\n  };\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/user/`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n      setData(res.data);\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error al conectarse al servidor!\");\n      if (error.response.status === 401) {\n        dispatch(logout(history));\n      }\n    }\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  const roleData = [\n    { id: \"Admin\", name: \"Administrador\" },\n    { id: \"Empresa\", name: \"Empresa de mantenimiento\" },\n    { id: \"Gerente\", name: \"Gerente\" },\n  ];\n\n  if (userSelector.user.role !== \"Admin\") {\n    return <Redirect to=\"/home\" />;\n  } else {\n    return (\n      <>\n        {successAlert ? <Alert text=\"Usuario guardado\" /> : null}\n        <Toaster position=\"top-right\" reverseOrder={false} />\n        <Navbar title=\"Administrar Usuarios\" />\n        <div className=\"relative justify-center px-20 vp-desktop\">\n          <div className=\"flex mt-14\">\n            <Link to=\"/home\">\n              <ChevronLeftIcon className=\"w-5 h-5 mr-2 text-gray-700\" />\n            </Link>\n            <Link className=\"font-objetive-medium\" to=\"/home\">\n              Volver\n            </Link>\n          </div>\n          <div className=\"w-full px-10 pt-10 pb-24 mt-6 bg-gray-100 rounded-3xl\">\n            <h1 className=\"mb-6 text-lg font-objetive-bold\">\n              {editable ? \"Editar usuario\" : \"Cargar nuevo usuario\"}\n            </h1>\n            <TextInput\n              placeholder=\"Nombre\"\n              eventHandler={onChangeName}\n              error={nameError}\n              value={name}\n            />\n\n            <div className=\"flex mt-8\">\n              <div className=\"w-full pr-4\">\n                <TextInput\n                  placeholder=\"Usuario\"\n                  eventHandler={onChangeUsername}\n                  error={usernameError}\n                  value={username}\n                />\n              </div>\n              <div className=\"w-full pl-4\">\n                <PasswordInput\n                  placeholder=\"Contraseña\"\n                  eventHandler={onChangePassword}\n                  error={passwordError}\n                  hide={hide}\n                  setHide={onSetHide}\n                  value={password}\n                />\n                <div className=\"pl-8 mt-4 text-sm text-left font-objetive-regular\">\n                  Debe tener al menos 8 caracteres\n                </div>\n              </div>\n            </div>\n\n            <div className=\"flex\">\n              <div className=\"w-full pr-4\">\n                <div className=\"font-objetive-medium\">Imagen de empresa</div>\n                <div className=\"mb-4 font-objetive-regular\">\n                  Formatos aceptados JPEG, JPG, PNG en 72 dpi.\n                </div>\n                <div {...getRootProps({ className: \"dropzone\" })}>\n                  <input {...getInputProps()} />\n                  <div className=\"flex items-center mr-10 cursor-pointer\">\n                    {img ? (\n                      <div className=\"mr-6 bg-gray-100 rounded-xl\">\n                        <img\n                          src={img}\n                          alt=\"Imagen\"\n                          className=\"object-contain w-20 h-20 rounded-xl\"\n                        />\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-center w-20 h-20 mr-6 align-middle bg-gray-300 rounded-xl\">\n                        <CameraIcon className=\"z-10 w-10 h-10 text-gray-700\" />\n                      </div>\n                    )}\n\n                    <div>\n                      <h3 className=\"underline font-objetive-bold text-app-violet-300\">\n                        Seleccionar imágen\n                      </h3>\n                      <h4 className=\"text-sm text-gray-700 font-objetive-regular w-52\">\n                        {files.length > 0\n                          ? files\n                          : img\n                          ? img.replace(`${s3BucketUrl}/empresas/`, \"\")\n                          : \"No se selecciono imagen\"}\n                      </h4>\n                    </div>\n                  </div>\n                </div>\n                {files.length > 0 || img ? (\n                  <div\n                    onClick={deleteImg}\n                    className=\"flex items-center justify-center w-20 h-5 mt-2 bg-red-600 cursor-pointer rounded-xl\"\n                  >\n                    <TrashIcon className=\"w-4 h-4 text-white\" />\n                  </div>\n                ) : null}\n              </div>\n\n              <div className=\"w-full pl-10 mt-8\">\n                <div className=\"pl-4 mb-4 font-objetive-medium\">\n                  Tipo de usuario\n                </div>\n                <ItemSelector\n                  eventHandler={onChangeRole}\n                  data={roleData}\n                  value={role}\n                  text=\"Tipo\"\n                  error={roleError}\n                />\n              </div>\n            </div>\n\n            <button\n              type=\"button\"\n              onClick={onSubmit}\n              className=\"absolute inline-flex items-center px-4 pt-4 pb-3 text-base text-white border border-transparent rounded-full shadow-sm bottom--20 right-32 font-objetive-medium bg-app-purple-btn hover:bg-red-500 focus:outline-none \"\n            >\n              {editable ? \"Editar usuario\" : \"Guardar usuario\"}\n            </button>\n          </div>\n        </div>\n        <Table data={data} handleEdit={handleEdit} alert={alert} />\n      </>\n    );\n  }\n};\n\nexport default Users;\n","/Users/augusto/Desktop/proyeco-front/src/views/login/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/config.js",[],"/Users/augusto/Desktop/proyeco-front/src/views/equipment/activity/table.js",[],"/Users/augusto/Desktop/proyeco-front/src/redux/ducks/user.js",[],"/Users/augusto/Desktop/proyeco-front/src/helpers/chart.js",[],"/Users/augusto/Desktop/proyeco-front/src/hooks/useOrderTable.js",["331"],"import { useEffect, useState } from \"react\";\nimport { getValue } from \"../helpers/table\";\n\nconst useOrderTable = ({ data, initProperty, orderBy = \"DESC\" }) => {\n\tconst [orderSelect, setOrderSelect] = useState({\n    orderBy,\n    property: initProperty,\n  });\n  const [dataOrdered, setDataOrdered] = useState([])\n\n\tconst sortTable = (property, isASC) => {\n    const dataSort = [...data].sort(function (a, b) {\n      const first = getValue(property, a);\n      const second = getValue(property, b);\n      if (isASC ? first > second : first < second) {\n        return 1;\n      }\n      if (isASC ? first < second : first > second) {\n        return -1;\n      }\n      return 0;\n    });\n    setDataOrdered(dataSort)\n  };\n\n  const handleSortTable = (property) => {\n    const orderBy =\n      orderSelect.property === property\n        ? orderSelect.orderBy === \"ASC\"\n          ? \"DESC\"\n          : \"ASC\"\n        : \"DESC\";\n    sortTable(property, orderBy === \"ASC\");\n    setOrderSelect({\n      property,\n      orderBy,\n    });\n  };\n\n\tuseEffect(() => {\n    if(data) {\n      sortTable(orderSelect.property, orderSelect.orderBy === \"ASC\");\n    }\n  }, [data]);\n\n\treturn { dataOrdered, sortTable, handleSortTable, orderSelect }\n}\n\nexport default useOrderTable","/Users/augusto/Desktop/proyeco-front/src/helpers/table.js",[],"/Users/augusto/Desktop/proyeco-front/src/hooks/useFetch.js",["332"],"import { useEffect, useState } from \"react\";\n\nconst useFetch = ({ url, options, initData }) => {\n  const [response, setResponse] = useState(null || initData);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const res = await fetch(url, options);\n        const json = await res.json();\n\n        setResponse(json);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return { response, error, isLoading };\n};\n\nexport default useFetch","/Users/augusto/Desktop/proyeco-front/src/helpers/string.js",["333"],"function editDistance(s1, s2) {\n  s1 = s1.toLowerCase();\n  s2 = s2.toLowerCase();\n\n  var costs = new Array();\n  for (var i = 0; i <= s1.length; i++) {\n    var lastValue = i;\n    for (var j = 0; j <= s2.length; j++) {\n      if (i === 0)\n        costs[j] = j;\n      else {\n        if (j > 0) {\n          var newValue = costs[j - 1];\n          if (s1.charAt(i - 1) !== s2.charAt(j - 1))\n            newValue = Math.min(Math.min(newValue, lastValue),\n              costs[j]) + 1;\n          costs[j - 1] = lastValue;\n          lastValue = newValue;\n        }\n      }\n    }\n    if (i > 0)\n      costs[s2.length] = lastValue;\n  }\n  return costs[s2.length];\n}\n\nexport function similarity(s1, s2) {\n  var longer = s1;\n  var shorter = s2;\n  if (s1.length < s2.length) {\n    longer = s2;\n    shorter = s1;\n  }\n  var longerLength = longer.length;\n  if (longerLength === 0) {\n    return 1.0;\n  }\n  return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\n\nexport function capitalizeFirstLetter(word){\n  return word.charAt(0).toUpperCase() + word.slice(1)\n}\n","/Users/augusto/Desktop/proyeco-front/src/views/equipment/tablas/gerencia.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/tableOrderPagination.js",[],"/Users/augusto/Desktop/proyeco-front/src/views/trash/table.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/alert/row.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/form/textInput/datalist.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/home/equipo/description.js",["334","335"],"import {\n  DownloadIcon,\n  XIcon,\n  LocationMarkerIcon,\n  DocumentDownloadIcon,\n} from \"@heroicons/react/outline\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport {\n  createChartCountBreackdown,\n  createChartEquip,\n} from \"../../../helpers/chart\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport Noimg from \"../../../assets/img/noimg.png\";\nimport useFetch from \"../../../hooks/useFetch\";\nimport { getYear, getMonth } from \"date-fns\";\nimport { backendUrl, s3BucketUrl } from \"../../../config\";\n\nconst yearNow = getYear(new Date());\n\nconst Description = ({ id, closeHandler, hidex }) => {\n  const userSelector = useSelector((store) => store.user);\n  const refChartCountBreackdown = useRef(null);\n  const refChartEquip = useRef(null);\n  const refFicha = useRef(null);\n  const [data, setData] = useState([]);\n  const { response: responseActividad } = useFetch({\n    url: `${backendUrl}/actividad/equipo/${id}`,\n    options: {\n      headers: {\n        Authorization: `Bearer ${userSelector.user.jwtToken}`,\n      },\n    },\n    initData: [],\n  });\n  const [img1, setImg1] = useState(\"\");\n  const [img2, setImg2] = useState(\"\");\n  const [img3, setImg3] = useState(\"\");\n  const [percentagePositiveAverias, setPercentagePositiveAverias] = useState(0);\n  const [percentageBalancePositive, setPercentageBalancePositive] = useState(0);\n\n  const onErrorImg1 = () => {\n    setImg1(Noimg);\n  };\n\n  const onErrorImg2 = () => {\n    setImg2(Noimg);\n  };\n\n  const onErrorImg3 = () => {\n    setImg3(Noimg);\n  };\n\n  const msToHMS = (ms) => {\n    let seconds = ms / 1000;\n    const hours = parseInt(seconds / 3600);\n    seconds = seconds % 3600;\n    const minutes = parseInt(seconds / 60);\n    seconds = seconds % 60;\n    alert(hours + \":\" + minutes);\n  };\n\n  const consult = async (source) => {\n    const res = await axios.get(`${backendUrl}/equipo/${id}`, {\n      cancelToken: source.token,\n      headers: {\n        Authorization: `Bearer ${userSelector.user.jwtToken}`,\n      },\n    });\n    const date = new Date(res.data.updatedAt);\n    const dif = Date.now() - date.getTime();\n    const days = Math.round(dif / 86400000);\n    res.data.updatedAt = days;\n    res.data.updateHours = date.getTime();\n    setData(res.data);\n\n    setImg1(res.data.imagenUno);\n    setImg2(res.data.imagenDos);\n    setImg3(res.data.imagenTres);\n  };\n\n  const handleClickDownloadFicha = () => {\n    var w = refFicha.current.offsetWidth;\n    var h = refFicha.current.offsetHeight;\n    const shadowElements = document.querySelectorAll(\".shadow-md\");\n    shadowElements.forEach((element) => {\n      element.classList.remove(\"shadow-md\");\n    });\n    html2canvas(refFicha.current, { useCORS: true }).then((canvas) => {\n      const img = canvas.toDataURL(\"image/jpeg\", 1);\n      const doc = new jsPDF(\"landscape\", \"px\", [w, h]);\n      doc.addImage(img, \"JPEG\", 0, 0, w, h);\n      doc.save(\"ficha.pdf\");\n\n      shadowElements.forEach((element) => {\n        element.classList.add(\"shadow-md\");\n      });\n    });\n  };\n\n  const handleClickDownloadHistorico = () => {\n    if (data.historico) {\n      window.open(`${s3BucketUrl}/${data.historico}`, \"_blank\");\n    }\n  };\n\n  useEffect(() => {\n    let source = axios.CancelToken.source();\n    consult(source);\n\n    return () => {\n      source.cancel();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (\n      !refChartCountBreackdown.current.classList.contains(\"active-chart\") &&\n      responseActividad.length\n    ) {\n      refChartCountBreackdown.current.classList.add(\"active-chart\");\n      let actividadesAveriasMonth = [];\n      let actividadesMantenimientoCorrectivoMonth = [];\n      let actividadesMantenimientoPreventivoMonth = [];\n      for (let i = 0; i < responseActividad.length; i++) {\n        const actividad = responseActividad[i];\n        const fechaActividad = new Date(actividad.fecha);\n        const yearActivity = getYear(fechaActividad);\n        if (yearActivity === yearNow) {\n          const monthActivity = getMonth(fechaActividad);\n          if (actividad.tipo === \"Averías\") {\n            if (!actividadesAveriasMonth[monthActivity]) {\n              actividadesAveriasMonth[monthActivity] = 1;\n            } else {\n              actividadesAveriasMonth[monthActivity] += 1;\n            }\n            continue;\n          }\n          if (actividad.tipo === \"Mantenimiento correctivo\") {\n            if (!actividadesMantenimientoCorrectivoMonth[monthActivity]) {\n              actividadesMantenimientoCorrectivoMonth[monthActivity] = 1;\n            } else {\n              actividadesMantenimientoCorrectivoMonth[monthActivity] += 1;\n            }\n          }\n          if (actividad.tipo === \"Mantenimiento preventivo\") {\n            if (!actividadesMantenimientoPreventivoMonth[monthActivity]) {\n              actividadesMantenimientoPreventivoMonth[monthActivity] = 1;\n            } else {\n              actividadesMantenimientoPreventivoMonth[monthActivity] += 1;\n            }\n          }\n        }\n      }\n      const CANT_CORRECT_AVERIAS = 3;\n      const TOTAL_PERCENTAGE = 100;\n      const COUNT_MONTHS = 12;\n      const percentage = Array.from(\n        { length: COUNT_MONTHS },\n        () => TOTAL_PERCENTAGE\n      );\n      const percentageBalance = Array.from(\n        { length: COUNT_MONTHS },\n        () => TOTAL_PERCENTAGE\n      );\n      actividadesAveriasMonth.forEach((averias, i) => {\n        if (averias >= 4) {\n          const INIT_VALUE_PROBLEM_PERCENTAGE = 18;\n          const countMentenimientoPreventivo =\n            actividadesMantenimientoPreventivoMonth[i];\n          const countMentenimientoCorrectivo =\n            actividadesMantenimientoCorrectivoMonth[i];\n          const averiasProblem = averias - CANT_CORRECT_AVERIAS;\n          let solutionAverias = 0;\n          let totalProblemPercentage = 0;\n          let totalBalancePercentage = 0;\n\n          solutionAverias =\n            averiasProblem -\n            countMentenimientoCorrectivo -\n            countMentenimientoPreventivo / 2;\n\n          if (solutionAverias > 0) {\n            for (let i = 1; i <= solutionAverias; i++) {\n              totalBalancePercentage += INIT_VALUE_PROBLEM_PERCENTAGE / i;\n            }\n          }\n          for (let i = 1; i <= averiasProblem; i++) {\n            totalProblemPercentage += INIT_VALUE_PROBLEM_PERCENTAGE / i;\n          }\n          const newPercentage = TOTAL_PERCENTAGE - totalProblemPercentage;\n          percentage[i] = newPercentage;\n          percentageBalance[i] = TOTAL_PERCENTAGE - totalBalancePercentage;\n        }\n      });\n      let balancePercentage = 0;\n      let balancePositivePercentage = 0;\n\n      percentage.forEach((monthPercentage) => {\n        balancePercentage += monthPercentage;\n      });\n      percentageBalance.forEach((monthPercentage) => {\n        balancePositivePercentage += monthPercentage;\n      });\n      setPercentageBalancePositive(balancePositivePercentage / COUNT_MONTHS);\n      setPercentagePositiveAverias(balancePercentage / COUNT_MONTHS);\n      createChartCountBreackdown(refChartCountBreackdown.current, {\n        preventivo: actividadesMantenimientoPreventivoMonth,\n        correctivo: actividadesMantenimientoCorrectivoMonth,\n        averias: actividadesAveriasMonth,\n      });\n      createChartEquip(refChartEquip.current, actividadesAveriasMonth);\n    }\n  }, [responseActividad]);\n\n  return (\n    <section\n      ref={refFicha}\n      className=\"relative w-full px-6 pt-4 pb-12 my-6 bg-gray-100 hola rounded-3xl font-objetive-regular\"\n    >\n      <div className=\"flex items-center justify-end\">\n        {userSelector.user.role === \"Admin\" ? (\n          <Link\n            to={{\n              pathname: \"/equipment/edit\",\n              state: { id: id },\n            }}\n            className=\"mt-4 mr-6 text-base underline table-autofont-objetive-bold\"\n          >\n            Editar equipo\n          </Link>\n        ) : null}\n        {hidex ? null : (\n          <button>\n            <XIcon\n              className=\"w-6 h-6 mt-4 text-gray-400\"\n              onClick={() => {\n                closeHandler(\"\", \"\");\n              }}\n            />\n          </button>\n        )}\n      </div>\n      <div className=\"px-10\">\n        <h2 className=\"text-3xl font-objetive-bold text-app-green-3\">\n          {data.name}\n        </h2>\n      </div>\n      <section className=\"grid grid-cols-2 px-10 gap-x-16\">\n        <div>\n          <div className=\"flex items-center my-3\">\n            <LocationMarkerIcon className=\"w-4 h-4 mr-2\" />\n            <p>\n              {data.linea ? data.linea.name : \"\"} -{\" \"}\n              {data.linea ? data.linea.lugar : \"\"} -{\" \"}\n              {data.estacion ? data.estacion.name : \"\"}\n            </p>\n          </div>\n          <h4\n            className={`mb-2 font-objetive-bold ${\n              data.funciona ? \"text-green-700\" : \"text-app-red-2\"\n            }`}\n          >\n            {data.estado}\n            <span className=\"text-sm text-black font-objetive-regular\">\n              {data.funciona ? \"\" : ` · ${data.updatedAt} dias inactivo ${data.updateHours}`}\n            </span>\n          </h4>\n          <div className=\"grid grid-cols-3 mb-3 gap-x-6\">\n            <div className=\"col-span-2\">\n              <img\n                className=\"object-cover w-full h-full rounded-xl\"\n                src={img1}\n                alt=\"Imagen1\"\n                onError={onErrorImg1}\n                crossOrigin=\"anonymous\"\n              />\n            </div>\n            <div className=\"grid grid-cols-1 gap-y-6\">\n              <div>\n                <img\n                  className=\"object-cover w-full h-full rounded-xl \"\n                  src={img2}\n                  alt=\"Imagen2\"\n                  onError={onErrorImg2}\n                  crossOrigin=\"anonymous\"\n                />\n              </div>\n              <div>\n                <img\n                  className=\"object-cover w-full h-full rounded-xl\"\n                  src={img3}\n                  alt=\"Imagen3\"\n                  onError={onErrorImg3}\n                  crossOrigin=\"anonymous\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"mb-6 text-sm\">\n            <p>N de identificación: {data.identificacion}</p>\n            <p>Modelo {data.modelo}</p>\n            <p className=\"my-3\">{data.detalles}</p>\n            <p className=\"text-app-green-4\">\n              A cargo de {data.empresa ? data.empresa.name : \"\"}\n            </p>\n          </div>\n          <div className=\"text-sm\">\n            <h4 className=\"mb-2 font-objetive-bold\">\n              Mantenimientos del último mes\n            </h4>\n            {responseActividad.length > 0 ? (\n              responseActividad.slice(0, 3).map((actividad) => {\n                return (\n                  <div\n                    key={actividad.id}\n                    className=\"pt-2 mt-2 space-y-1 border-t border-gray-400\"\n                  >\n                    <h5 className=\"font-objetive-medium\">{actividad.tipo}</h5>\n                    <p className=\"text-xs\">Fecha de registro - 17/07/2021</p>\n                    <p className=\"text-xs\">\n                      {actividad.dias} {actividad.dias === 1 ? \"día\" : \"días\"}{\" \"}\n                      parado en reparación\n                    </p>\n                  </div>\n                );\n              })\n            ) : (\n              <div className=\"pt-2 mt-2 space-y-1 border-t border-gray-400\">\n                <h5 className=\"font-objetive-medium\">No registra actividad</h5>\n              </div>\n            )}\n          </div>\n        </div>\n        <div>\n          <div>\n            <h4 className=\"mb-4 text-sm\">Cantidad de averías</h4>\n            <div className=\"w-full p-6 bg-white shadow-md rounded-3xl\">\n              <div className=\"grid grid-cols-3 \">\n                <div className=\"col-span-2\">\n                  <canvas\n                    ref={refChartCountBreackdown}\n                    id=\"chartCantBreackdown\"\n                    height=\"250\"\n                    width=\"250\"\n                  ></canvas>\n                </div>\n                <div className=\"flex flex-col items-center justify-center\">\n                  <p className=\"text-3xl font-objetive-bold text-app-green-3\">\n                    {percentageBalancePositive} %\n                  </p>\n                  <p className=\"text-sm font-objetive-regular\">\n                    Balance positivo\n                  </p>\n                </div>\n              </div>\n              <div className=\"px-8 mt-8\" id=\"legend-container\">\n                <ul className=\"flex flex-col space-y-2 text-xs font-objetive-medium ul-chart\" />\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-10 mb-8\">\n            <h4 className=\"mb-4 text-sm\">Rendimiento general del equipo</h4>\n            <div className=\"grid w-full grid-cols-3 p-6 bg-white shadow-md rounded-3xl\">\n              <div className=\"col-span-2\">\n                <p className=\"mb-6 ml-4 text-xs text-black font-objetive-medium\">\n                  Averías totales\n                </p>\n                <canvas\n                  className=\"ml-10\"\n                  ref={refChartEquip}\n                  id=\"chartEquip\"\n                ></canvas>\n              </div>\n              <div className=\"flex flex-col items-center justify-center text-black\">\n                <div className=\"flex flex-col items-center justify-center w-32 h-32 border rounded-full border-app-red-1\">\n                  <p className=\"text-3xl font-objetive-bold\">\n                    {percentagePositiveAverias} %\n                  </p>\n                  <p className=\"text-sm font-objetive-regular\">Positivo</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              onClick={handleClickDownloadFicha}\n              className=\"relative py-1 mr-6 text-xs rounded-full font-objetive-medium px-7 bg-app-green-1 text-app-green-3\"\n            >\n              <div className=\"absolute top-0 bottom-0 left-0 flex items-center\">\n                <DownloadIcon className=\"w-6 h-6 p-1 text-white rounded-full bg-app-green-3\" />\n              </div>\n              Descargar ficha\n            </button>\n            <button\n              onClick={handleClickDownloadHistorico}\n              className=\"relative py-1 text-xs rounded-full font-objetive-medium px-7 bg-app-green-1 text-app-green-3\"\n            >\n              <div className=\"absolute top-0 bottom-0 flex items-center -left-1\">\n                <DocumentDownloadIcon className=\"w-6 h-6 p-1 text-white rounded-full bg-app-green-3\" />\n              </div>\n              Descargar datos históricos\n            </button>\n          </div>\n        </div>\n      </section>\n    </section>\n  );\n};\n\nexport default Description;\n","/Users/augusto/Desktop/proyeco-front/src/components/users/table/equipos.js",["336"],"/Users/augusto/Desktop/proyeco-front/src/components/alert/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/form/textInput/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/form/numberPick/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/form/itemSelectorWithIcon/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/form/itemSelector/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/@app/navbar/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/hooks/usePagination.js",[],"/Users/augusto/Desktop/proyeco-front/src/helpers/staticData.js",[],"/Users/augusto/Desktop/proyeco-front/src/helpers/equipment.js",[],"/Users/augusto/Desktop/proyeco-front/src/views/equipment/tablas/row.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/home/equipo/dropzone.js",[],"/Users/augusto/Desktop/proyeco-front/src/containers/home/horizontalList/mod.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/users/table/row.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/users/table/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/@app/navbar/components/organization.js",[],"/Users/augusto/Desktop/proyeco-front/src/@app/navbar/components/gerente.js",[],"/Users/augusto/Desktop/proyeco-front/src/@app/navbar/components/admin.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/home/equipo/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/form/passwordInput/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/home/estacion/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/home/linea/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/components/home/company/index.js",[],"/Users/augusto/Desktop/proyeco-front/src/containers/home/horizontalList/index.js",["337"],"import { OverlayScrollbarsComponent } from \"overlayscrollbars-react\";\nimport { useState, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { ScrollAnimation } from \"../../../helpers/vartiants\";\nimport Rail from \"../../../assets/img/rail.svg\";\nimport Escalator from \"../../../assets/img/escalator.svg\";\nimport Station from \"../../../assets/img/station.svg\";\n\nconst HorizontalList = (props) => {\n  const [scrollOnViewport, setScrollOnViewport] = useState(false);\n  const [hide, setHide] = useState(false);\n  const scrolx = useRef(null);\n\n  const scrolls = (e) => {\n    // if (e.x) {\n    //   setScrollOnViewport(!scrollOnViewport);\n    // }\n  };\n\n  const getScroll = () => {\n    if (scrolx.current.osInstance().scroll().position.x > 15) {\n      setHide(true);\n    } else {\n      setHide(false);\n    }\n  };\n\n  return (\n    <div className=\"relative pr-20 vp-desktop pl-44\">\n      <motion.div\n        initial=\"hidden\"\n        animate={`${!hide ? \"visible\" : \"hidden\"}`}\n        variants={ScrollAnimation}\n        className={`absolute z-10 cursor-pointer flex ${\n          props.theme === \"violet\"\n            ? \"bg-app-purple-200 text-app-purple-300\"\n            : \"\"\n        } ${\n          props.theme === \"yellow\" ? \"bg-app-yellow-5  text-app-yellow-4\" : \"\"\n        } ${props.theme === \"red\" ? \"bg-app-red-2  text-app-yellow-4\" : \"\"} ${\n          props.theme === \"green\" ? \"bg-app-green-3  text-app-yellow-4\" : \"\"\n        } pt-4 pb-3 font-objetive-regular px-10 left-28 top-8 rounded-full justify-center items-center`}\n      >\n        {props.theme === \"violet\" ? \"Todas\" : \"\"}\n        {props.theme === \"yellow\" ? (\n          <>\n            Líneas\n            <img src={Rail} alt=\"Rail\" className=\"w-6 h-6 ml-3\"></img>\n          </>\n        ) : (\n          \"\"\n        )}\n        {props.theme === \"red\" ? (\n          <>\n            Estaciones\n            <img src={Station} alt=\"Station\" className=\"w-6 h-6 ml-3\"></img>\n          </>\n        ) : (\n          \"\"\n        )}\n        {props.theme === \"green\" ? (\n          <>\n            Equipos\n            <img src={Escalator} alt=\"Escalator\" className=\"w-6 h-6 ml-2\"></img>\n          </>\n        ) : (\n          \"\"\n        )}\n      </motion.div>\n\n      <OverlayScrollbarsComponent\n        className={`overlay-scrollbar mt-4 ${\n          props.theme === \"violet\" ? \"bg-app-purple-100\" : \"\"\n        } ${props.theme === \"yellow\" ? \"bg-app-yellow-4\" : \"\"}\n        ${props.theme === \"red\" ? \"bg-app-red-1\" : \"\"} \n        ${props.theme === \"green\" ? \"bg-app-green-1\" : \"\"} rounded-3xl pt-9 ${\n          scrollOnViewport\n            ? `pb-16 ${props.theme === \"violet\" ? \"pl-20\" : \"\"} ${\n                props.theme === \"yellow\" ? \"pl-32\" : \"\"\n              } ${props.theme === \"red\" ? \"pl-44\" : \"\"} ${\n                props.theme === \"green\" ? \"pl-32\" : \"\"\n              }`\n            : `pb-9 ${props.theme === \"violet\" ? \"pl-20\" : \"\"} ${\n                props.theme === \"yellow\" ? \"pl-32\" : \"\"\n              } ${props.theme === \"red\" ? \"pl-44\" : \"\"} ${\n                props.theme === \"green\" ? \"pl-32\" : \"\"\n              }`\n        }`}\n        ref={scrolx}\n        options={{\n          callbacks: {\n            onOverflowChanged: scrolls,\n            onScroll: () => {\n              getScroll();\n            },\n          },\n        }}\n      >\n        <div className=\"flex whitespace-nowrap\">\n          {props.children}\n          <div className=\"p-1\" />\n        </div>\n      </OverlayScrollbarsComponent>\n    </div>\n  );\n};\n\nexport default HorizontalList;\n","/Users/augusto/Desktop/proyeco-front/src/helpers/vartiants.js",[],{"ruleId":"338","replacedBy":"339"},{"ruleId":"340","replacedBy":"341"},{"ruleId":"342","severity":1,"message":"343","line":66,"column":6,"nodeType":"344","endLine":66,"endColumn":8,"suggestions":"345"},{"ruleId":"346","severity":1,"message":"347","line":20,"column":10,"nodeType":"348","messageId":"349","endLine":20,"endColumn":14},{"ruleId":"346","severity":1,"message":"350","line":24,"column":10,"nodeType":"348","messageId":"349","endLine":24,"endColumn":20},{"ruleId":"346","severity":1,"message":"351","line":26,"column":10,"nodeType":"348","messageId":"349","endLine":26,"endColumn":23},{"ruleId":"342","severity":1,"message":"343","line":299,"column":6,"nodeType":"344","endLine":299,"endColumn":8,"suggestions":"352"},{"ruleId":"346","severity":1,"message":"347","line":20,"column":10,"nodeType":"348","messageId":"349","endLine":20,"endColumn":14},{"ruleId":"346","severity":1,"message":"350","line":24,"column":10,"nodeType":"348","messageId":"349","endLine":24,"endColumn":20},{"ruleId":"346","severity":1,"message":"351","line":26,"column":10,"nodeType":"348","messageId":"349","endLine":26,"endColumn":23},{"ruleId":"342","severity":1,"message":"343","line":256,"column":6,"nodeType":"344","endLine":256,"endColumn":8,"suggestions":"353"},{"ruleId":"346","severity":1,"message":"350","line":29,"column":10,"nodeType":"348","messageId":"349","endLine":29,"endColumn":20},{"ruleId":"346","severity":1,"message":"351","line":31,"column":10,"nodeType":"348","messageId":"349","endLine":31,"endColumn":23},{"ruleId":"346","severity":1,"message":"354","line":33,"column":10,"nodeType":"348","messageId":"349","endLine":33,"endColumn":22},{"ruleId":"346","severity":1,"message":"355","line":35,"column":10,"nodeType":"348","messageId":"349","endLine":35,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":354,"column":6,"nodeType":"344","endLine":354,"endColumn":8,"suggestions":"356"},{"ruleId":"342","severity":1,"message":"357","line":42,"column":6,"nodeType":"344","endLine":42,"endColumn":16,"suggestions":"358"},{"ruleId":"346","severity":1,"message":"350","line":31,"column":10,"nodeType":"348","messageId":"349","endLine":31,"endColumn":20},{"ruleId":"346","severity":1,"message":"351","line":33,"column":10,"nodeType":"348","messageId":"349","endLine":33,"endColumn":23},{"ruleId":"346","severity":1,"message":"354","line":35,"column":10,"nodeType":"348","messageId":"349","endLine":35,"endColumn":22},{"ruleId":"346","severity":1,"message":"355","line":37,"column":10,"nodeType":"348","messageId":"349","endLine":37,"endColumn":19},{"ruleId":"342","severity":1,"message":"343","line":332,"column":6,"nodeType":"344","endLine":332,"endColumn":8,"suggestions":"359"},{"ruleId":"346","severity":1,"message":"347","line":22,"column":10,"nodeType":"348","messageId":"349","endLine":22,"endColumn":14},{"ruleId":"346","severity":1,"message":"350","line":26,"column":10,"nodeType":"348","messageId":"349","endLine":26,"endColumn":20},{"ruleId":"346","severity":1,"message":"351","line":28,"column":10,"nodeType":"348","messageId":"349","endLine":28,"endColumn":23},{"ruleId":"346","severity":1,"message":"360","line":35,"column":10,"nodeType":"348","messageId":"349","endLine":35,"endColumn":18},{"ruleId":"346","severity":1,"message":"361","line":35,"column":20,"nodeType":"348","messageId":"349","endLine":35,"endColumn":31},{"ruleId":"342","severity":1,"message":"343","line":251,"column":6,"nodeType":"344","endLine":251,"endColumn":8,"suggestions":"362"},{"ruleId":"342","severity":1,"message":"343","line":56,"column":6,"nodeType":"344","endLine":56,"endColumn":8,"suggestions":"363"},{"ruleId":"346","severity":1,"message":"347","line":21,"column":10,"nodeType":"348","messageId":"349","endLine":21,"endColumn":14},{"ruleId":"346","severity":1,"message":"350","line":25,"column":10,"nodeType":"348","messageId":"349","endLine":25,"endColumn":20},{"ruleId":"346","severity":1,"message":"351","line":27,"column":10,"nodeType":"348","messageId":"349","endLine":27,"endColumn":23},{"ruleId":"342","severity":1,"message":"343","line":306,"column":6,"nodeType":"344","endLine":306,"endColumn":10,"suggestions":"364"},{"ruleId":"342","severity":1,"message":"343","line":95,"column":6,"nodeType":"344","endLine":95,"endColumn":8,"suggestions":"365"},{"ruleId":"342","severity":1,"message":"343","line":214,"column":6,"nodeType":"344","endLine":214,"endColumn":8,"suggestions":"366"},{"ruleId":"342","severity":1,"message":"343","line":63,"column":6,"nodeType":"344","endLine":63,"endColumn":8,"suggestions":"367"},{"ruleId":"346","severity":1,"message":"350","line":27,"column":10,"nodeType":"348","messageId":"349","endLine":27,"endColumn":20},{"ruleId":"346","severity":1,"message":"351","line":29,"column":10,"nodeType":"348","messageId":"349","endLine":29,"endColumn":23},{"ruleId":"346","severity":1,"message":"354","line":32,"column":10,"nodeType":"348","messageId":"349","endLine":32,"endColumn":22},{"ruleId":"346","severity":1,"message":"360","line":37,"column":10,"nodeType":"348","messageId":"349","endLine":37,"endColumn":18},{"ruleId":"346","severity":1,"message":"361","line":37,"column":20,"nodeType":"348","messageId":"349","endLine":37,"endColumn":31},{"ruleId":"342","severity":1,"message":"343","line":280,"column":6,"nodeType":"344","endLine":280,"endColumn":10,"suggestions":"368"},{"ruleId":"342","severity":1,"message":"343","line":98,"column":6,"nodeType":"344","endLine":98,"endColumn":8,"suggestions":"369"},{"ruleId":"342","severity":1,"message":"343","line":52,"column":6,"nodeType":"344","endLine":52,"endColumn":8,"suggestions":"370"},{"ruleId":"342","severity":1,"message":"343","line":123,"column":6,"nodeType":"344","endLine":123,"endColumn":8,"suggestions":"371"},{"ruleId":"346","severity":1,"message":"372","line":27,"column":21,"nodeType":"348","messageId":"349","endLine":27,"endColumn":33},{"ruleId":"342","severity":1,"message":"343","line":262,"column":6,"nodeType":"344","endLine":262,"endColumn":8,"suggestions":"373"},{"ruleId":"342","severity":1,"message":"374","line":44,"column":6,"nodeType":"344","endLine":44,"endColumn":12,"suggestions":"375"},{"ruleId":"342","severity":1,"message":"376","line":24,"column":6,"nodeType":"344","endLine":24,"endColumn":8,"suggestions":"377"},{"ruleId":"378","severity":1,"message":"379","line":5,"column":15,"nodeType":"380","messageId":"381","endLine":5,"endColumn":26},{"ruleId":"346","severity":1,"message":"382","line":57,"column":9,"nodeType":"348","messageId":"349","endLine":57,"endColumn":16},{"ruleId":"342","severity":1,"message":"343","line":117,"column":6,"nodeType":"344","endLine":117,"endColumn":8,"suggestions":"383"},{"ruleId":"346","severity":1,"message":"384","line":11,"column":10,"nodeType":"348","messageId":"349","endLine":11,"endColumn":18},{"ruleId":"346","severity":1,"message":"385","line":10,"column":28,"nodeType":"348","messageId":"349","endLine":10,"endColumn":47},"no-native-reassign",["386"],"no-negated-in-lhs",["387"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'consult'. Either include it or remove the dependency array.","ArrayExpression",["388"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'lineaError' is assigned a value but never used.","'estacionError' is assigned a value but never used.",["389"],["390"],"'empresaError' is assigned a value but never used.","'tipoError' is assigned a value but never used.",["391"],"React Hook useEffect has a missing dependency: 'searchValue'. Either include it or remove the dependency array.",["392"],["393"],"'dataList' is assigned a value but never used.","'setDataList' is assigned a value but never used.",["394"],["395"],["396"],["397"],["398"],["399"],["400"],["401"],["402"],["403"],"'setRoleError' is assigned a value but never used.",["404"],"React Hook useEffect has missing dependencies: 'orderSelect.orderBy', 'orderSelect.property', and 'sortTable'. Either include them or remove the dependency array.",["405"],"React Hook useEffect has missing dependencies: 'options' and 'url'. Either include them or remove the dependency array.",["406"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'msToHMS' is assigned a value but never used.",["407"],"'getValue' is defined but never used.","'setScrollOnViewport' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"408","fix":"409"},{"desc":"408","fix":"410"},{"desc":"408","fix":"411"},{"desc":"408","fix":"412"},{"desc":"413","fix":"414"},{"desc":"408","fix":"415"},{"desc":"408","fix":"416"},{"desc":"408","fix":"417"},{"desc":"418","fix":"419"},{"desc":"408","fix":"420"},{"desc":"408","fix":"421"},{"desc":"408","fix":"422"},{"desc":"418","fix":"423"},{"desc":"408","fix":"424"},{"desc":"408","fix":"425"},{"desc":"408","fix":"426"},{"desc":"408","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"408","fix":"432"},"Update the dependencies array to be: [consult]",{"range":"433","text":"434"},{"range":"435","text":"434"},{"range":"436","text":"434"},{"range":"437","text":"434"},"Update the dependencies array to be: [response, searchValue]",{"range":"438","text":"439"},{"range":"440","text":"434"},{"range":"441","text":"434"},{"range":"442","text":"434"},"Update the dependencies array to be: [consult, id]",{"range":"443","text":"444"},{"range":"445","text":"434"},{"range":"446","text":"434"},{"range":"447","text":"434"},{"range":"448","text":"444"},{"range":"449","text":"434"},{"range":"450","text":"434"},{"range":"451","text":"434"},{"range":"452","text":"434"},"Update the dependencies array to be: [data, orderSelect.orderBy, orderSelect.property, sortTable]",{"range":"453","text":"454"},"Update the dependencies array to be: [options, url]",{"range":"455","text":"456"},{"range":"457","text":"434"},[1908,1910],"[consult]",[8924,8926],[7631,7633],[9460,9462],[1328,1338],"[response, searchValue]",[8716,8718],[7391,7393],[1644,1646],[9146,9150],"[consult, id]",[2680,2682],[6129,6131],[1847,1849],[8195,8199],[2764,2766],[1497,1499],[3470,3472],[7590,7592],[1135,1141],"[data, orderSelect.orderBy, orderSelect.property, sortTable]",[582,584],"[options, url]",[3411,3413]]