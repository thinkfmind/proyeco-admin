{"ast":null,"code":"var _jsxFileName = \"/Users/augusto/Desktop/proyeco-front/src/views/alerts/history.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Navbar from \"../../@app/navbar\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport TableOrderPagination from \"../../components/tableOrderPagination\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { logout } from \"../../redux/ducks/user\";\nimport useOrderTable from \"../../hooks/useOrderTable\";\nimport Row from \"../../components/alert/row\";\nimport { backendUrl } from \"../../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MAX_CANT_ROW = 7;\n\nconst AlertHistory = () => {\n  _s();\n\n  const userSelector = useSelector(store => store.user);\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [pagination, setPagination] = useState(1);\n  const [data, setData] = useState([]);\n  const {\n    dataOrdered,\n    sortTable\n  } = useOrderTable({\n    data,\n    initProperty: \"createdAt\"\n  });\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n\n    try {\n      const res = await axios.get(`${backendUrl}/alerta`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`\n        }\n      });\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res.data.filter(alerta => {\n          return alerta.to === userSelector.user.name || alerta.to === userSelector.user.name;\n        });\n        setData(result);\n      } else {\n        setData(res.data);\n      }\n\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error\");\n\n      if (error.response) {\n        if (error.response.status === 401) {\n          dispatch(logout(history));\n        }\n      }\n    }\n  };\n\n  const newPagination = newPaginationValue => {\n    setPagination(newPaginationValue);\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-right\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Historial de alertas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-20 pt-20 pb-10 vp-desktop\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-2 font-objetive-bold\",\n        children: \"\\xDAltimas alertas emitidas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full table-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataOrdered.map((item, index) => {\n            if (index < MAX_CANT_ROW * pagination && index >= pagination * MAX_CANT_ROW - MAX_CANT_ROW) {\n              return /*#__PURE__*/_jsxDEV(Row, {\n                item: item\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 24\n              }, this);\n            }\n\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableOrderPagination, {\n        pagination: pagination,\n        newPagination: newPagination,\n        cantElements: data.length,\n        maxCantRow: MAX_CANT_ROW,\n        order: {\n          sortTable,\n          alphabetic: \"equipo\",\n          date: \"createdAt\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AlertHistory, \"vxs/JQMvM9IOHDr1ZdJO5Fu4Yxs=\", false, function () {\n  return [useSelector, useHistory, useDispatch, useOrderTable];\n});\n\n_c = AlertHistory;\nexport default AlertHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlertHistory\");","map":{"version":3,"sources":["/Users/augusto/Desktop/proyeco-front/src/views/alerts/history.js"],"names":["useState","useEffect","Navbar","axios","toast","Toaster","TableOrderPagination","useSelector","useDispatch","useHistory","logout","useOrderTable","Row","backendUrl","MAX_CANT_ROW","AlertHistory","userSelector","store","user","history","dispatch","pagination","setPagination","data","setData","dataOrdered","sortTable","initProperty","consult","toastLoading","loading","res","get","headers","Authorization","jwtToken","role","result","filter","alerta","to","name","dismiss","error","response","status","newPagination","newPaginationValue","map","item","index","id","length","alphabetic","date"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Navbar from \"../../@app/navbar\";\nimport axios from \"axios\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport TableOrderPagination from \"../../components/tableOrderPagination\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { logout } from \"../../redux/ducks/user\";\nimport useOrderTable from \"../../hooks/useOrderTable\";\nimport Row from \"../../components/alert/row\";\nimport { backendUrl } from \"../../config\";\n\nconst MAX_CANT_ROW = 7;\n\nconst AlertHistory = () => {\n  const userSelector = useSelector((store) => store.user);\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const [pagination, setPagination] = useState(1);\n  const [data, setData] = useState([]);\n  const { dataOrdered, sortTable } = useOrderTable({\n    data,\n    initProperty: \"createdAt\",\n  });\n\n  const consult = async () => {\n    const toastLoading = toast.loading(\"Cargando...\");\n    try {\n      const res = await axios.get(`${backendUrl}/alerta`, {\n        headers: {\n          Authorization: `Bearer ${userSelector.user.jwtToken}`,\n        },\n      });\n\n\n      if (userSelector.user.role === \"Empresa\") {\n        const result = res.data.filter((alerta) => {\n          return alerta.to === userSelector.user.name || alerta.to === userSelector.user.name;\n        });\n        setData(result);\n      } else {\n        setData(res.data);\n      }\n\n      toast.dismiss(toastLoading);\n    } catch (error) {\n      toast.dismiss(toastLoading);\n      toast.error(\"Error\");\n      if (error.response) {\n        if (error.response.status === 401) {\n          dispatch(logout(history));\n        }\n      }\n    }\n  };\n\n  const newPagination = (newPaginationValue) => {\n    setPagination(newPaginationValue);\n  };\n\n  useEffect(() => {\n    consult();\n  }, []);\n\n  return (\n    <>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n      <Navbar title=\"Historial de alertas\" />\n      <div className=\"px-20 pt-20 pb-10 vp-desktop\">\n        <h1 className=\"mb-2 font-objetive-bold\">Últimas alertas emitidas</h1>\n        <table className=\"w-full table-auto\">\n          <tbody>\n            {dataOrdered.map((item, index) => {\n              if (\n                index < MAX_CANT_ROW * pagination &&\n                index >= pagination * MAX_CANT_ROW - MAX_CANT_ROW\n              ) {\n                return <Row key={item.id} item={item} />;\n              }\n              return null;\n            })}\n          </tbody>\n        </table>\n        <TableOrderPagination\n          pagination={pagination}\n          newPagination={newPagination}\n          cantElements={data.length}\n          maxCantRow={MAX_CANT_ROW}\n          order={{ sortTable, alphabetic: \"equipo\", date: \"createdAt\" }}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default AlertHistory;\n"]},"metadata":{},"sourceType":"module"}