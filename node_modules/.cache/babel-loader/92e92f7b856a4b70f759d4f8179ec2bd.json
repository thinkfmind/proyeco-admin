{"ast":null,"code":"function editDistance(s1, s2) {\n  s1 = s1.toLowerCase();\n  s2 = s2.toLowerCase();\n  var costs = new Array();\n\n  for (var i = 0; i <= s1.length; i++) {\n    var lastValue = i;\n\n    for (var j = 0; j <= s2.length; j++) {\n      if (i === 0) costs[j] = j;else {\n        if (j > 0) {\n          var newValue = costs[j - 1];\n          if (s1.charAt(i - 1) !== s2.charAt(j - 1)) newValue = Math.min(Math.min(newValue, lastValue), costs[j]) + 1;\n          costs[j - 1] = lastValue;\n          lastValue = newValue;\n        }\n      }\n    }\n\n    if (i > 0) costs[s2.length] = lastValue;\n  }\n\n  return costs[s2.length];\n}\n\nexport function similarity(s1, s2) {\n  var longer = s1;\n  var shorter = s2;\n\n  if (s1.length < s2.length) {\n    longer = s2;\n    shorter = s1;\n  }\n\n  var longerLength = longer.length;\n\n  if (longerLength === 0) {\n    return 1.0;\n  }\n\n  return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\nexport function capitalizeFirstLetter(word) {\n  return word.charAt(0).toUpperCase() + word.slice(1);\n}","map":{"version":3,"sources":["/Users/augusto/Desktop/proyeco-front/src/helpers/string.js"],"names":["editDistance","s1","s2","toLowerCase","costs","Array","i","length","lastValue","j","newValue","charAt","Math","min","similarity","longer","shorter","longerLength","parseFloat","capitalizeFirstLetter","word","toUpperCase","slice"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,EAAtB,EAA0BC,EAA1B,EAA8B;AAC5BD,EAAAA,EAAE,GAAGA,EAAE,CAACE,WAAH,EAAL;AACAD,EAAAA,EAAE,GAAGA,EAAE,CAACC,WAAH,EAAL;AAEA,MAAIC,KAAK,GAAG,IAAIC,KAAJ,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,EAAE,CAACM,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,QAAIE,SAAS,GAAGF,CAAhB;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIP,EAAE,CAACK,MAAxB,EAAgCE,CAAC,EAAjC,EAAqC;AACnC,UAAIH,CAAC,KAAK,CAAV,EACEF,KAAK,CAACK,CAAD,CAAL,GAAWA,CAAX,CADF,KAEK;AACH,YAAIA,CAAC,GAAG,CAAR,EAAW;AACT,cAAIC,QAAQ,GAAGN,KAAK,CAACK,CAAC,GAAG,CAAL,CAApB;AACA,cAAIR,EAAE,CAACU,MAAH,CAAUL,CAAC,GAAG,CAAd,MAAqBJ,EAAE,CAACS,MAAH,CAAUF,CAAC,GAAG,CAAd,CAAzB,EACEC,QAAQ,GAAGE,IAAI,CAACC,GAAL,CAASD,IAAI,CAACC,GAAL,CAASH,QAAT,EAAmBF,SAAnB,CAAT,EACTJ,KAAK,CAACK,CAAD,CADI,IACG,CADd;AAEFL,UAAAA,KAAK,CAACK,CAAC,GAAG,CAAL,CAAL,GAAeD,SAAf;AACAA,UAAAA,SAAS,GAAGE,QAAZ;AACD;AACF;AACF;;AACD,QAAIJ,CAAC,GAAG,CAAR,EACEF,KAAK,CAACF,EAAE,CAACK,MAAJ,CAAL,GAAmBC,SAAnB;AACH;;AACD,SAAOJ,KAAK,CAACF,EAAE,CAACK,MAAJ,CAAZ;AACD;;AAED,OAAO,SAASO,UAAT,CAAoBb,EAApB,EAAwBC,EAAxB,EAA4B;AACjC,MAAIa,MAAM,GAAGd,EAAb;AACA,MAAIe,OAAO,GAAGd,EAAd;;AACA,MAAID,EAAE,CAACM,MAAH,GAAYL,EAAE,CAACK,MAAnB,EAA2B;AACzBQ,IAAAA,MAAM,GAAGb,EAAT;AACAc,IAAAA,OAAO,GAAGf,EAAV;AACD;;AACD,MAAIgB,YAAY,GAAGF,MAAM,CAACR,MAA1B;;AACA,MAAIU,YAAY,KAAK,CAArB,EAAwB;AACtB,WAAO,GAAP;AACD;;AACD,SAAO,CAACA,YAAY,GAAGjB,YAAY,CAACe,MAAD,EAASC,OAAT,CAA5B,IAAiDE,UAAU,CAACD,YAAD,CAAlE;AACD;AAED,OAAO,SAASE,qBAAT,CAA+BC,IAA/B,EAAoC;AACzC,SAAOA,IAAI,CAACT,MAAL,CAAY,CAAZ,EAAeU,WAAf,KAA+BD,IAAI,CAACE,KAAL,CAAW,CAAX,CAAtC;AACD","sourcesContent":["function editDistance(s1, s2) {\n  s1 = s1.toLowerCase();\n  s2 = s2.toLowerCase();\n\n  var costs = new Array();\n  for (var i = 0; i <= s1.length; i++) {\n    var lastValue = i;\n    for (var j = 0; j <= s2.length; j++) {\n      if (i === 0)\n        costs[j] = j;\n      else {\n        if (j > 0) {\n          var newValue = costs[j - 1];\n          if (s1.charAt(i - 1) !== s2.charAt(j - 1))\n            newValue = Math.min(Math.min(newValue, lastValue),\n              costs[j]) + 1;\n          costs[j - 1] = lastValue;\n          lastValue = newValue;\n        }\n      }\n    }\n    if (i > 0)\n      costs[s2.length] = lastValue;\n  }\n  return costs[s2.length];\n}\n\nexport function similarity(s1, s2) {\n  var longer = s1;\n  var shorter = s2;\n  if (s1.length < s2.length) {\n    longer = s2;\n    shorter = s1;\n  }\n  var longerLength = longer.length;\n  if (longerLength === 0) {\n    return 1.0;\n  }\n  return (longerLength - editDistance(longer, shorter)) / parseFloat(longerLength);\n}\n\nexport function capitalizeFirstLetter(word){\n  return word.charAt(0).toUpperCase() + word.slice(1)\n}\n"]},"metadata":{},"sourceType":"module"}