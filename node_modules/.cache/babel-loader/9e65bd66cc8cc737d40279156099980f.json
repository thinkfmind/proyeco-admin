{"ast":null,"code":"import axios from \"axios\";\nimport { backendUrl } from '../../config';\nconst initialState = {\n  authenticated: false,\n  user: []\n};\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nconst LOGIN_FAILURE = \"LOGIN_FAILURE\";\nconst LOGOUT = \"USERS_LOGOUT\";\nexport default function userReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        authenticated: true,\n        user: action.user\n      };\n\n    case LOGIN_SUCCESS:\n      return {\n        authenticated: true,\n        user: action.payload\n      };\n\n    case LOGIN_FAILURE:\n      return {\n        authenticated: false,\n        user: []\n      };\n\n    case LOGOUT:\n      return {\n        authenticated: false,\n        user: []\n      };\n\n    default:\n      return state;\n  }\n}\nexport const login = (user, history) => async dispatch => {\n  try {\n    const res = await axios.post(`${backendUrl}/user/auth`, user, {\n      withCredentials: true\n    });\n    history.push(\"/home\");\n    await dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    return {\n      message: 'success'\n    };\n  } catch {\n    dispatch({\n      type: LOGIN_FAILURE\n    });\n    return {\n      message: 'error'\n    };\n  }\n};\nexport const logout = history => dispatch => {\n  history.push(\"/\");\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/Users/augusto/Desktop/proyeco-front/src/redux/ducks/user.js"],"names":["axios","backendUrl","initialState","authenticated","user","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","userReducer","state","action","type","payload","login","history","dispatch","res","post","withCredentials","push","data","message","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE,KADI;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,MAAM,GAAG,cAAf;AAEA,eAAe,SAASC,WAAT,GAAmD;AAAA,MAA9BC,KAA8B,uEAAtBR,YAAsB;AAAA,MAARS,MAAQ;;AAChE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,aAAL;AACE,aAAO;AAAEF,QAAAA,aAAa,EAAE,IAAjB;AAAuBC,QAAAA,IAAI,EAAEO,MAAM,CAACP;AAApC,OAAP;;AACF,SAAKE,aAAL;AACE,aAAO;AAAEH,QAAAA,aAAa,EAAE,IAAjB;AAAuBC,QAAAA,IAAI,EAAEO,MAAM,CAACE;AAApC,OAAP;;AACF,SAAKN,aAAL;AACE,aAAO;AAAEJ,QAAAA,aAAa,EAAE,KAAjB;AAAwBC,QAAAA,IAAI,EAAE;AAA9B,OAAP;;AACF,SAAKI,MAAL;AACE,aAAO;AAAEL,QAAAA,aAAa,EAAE,KAAjB;AAAwBC,QAAAA,IAAI,EAAE;AAA9B,OAAP;;AACF;AACE,aAAOM,KAAP;AAVJ;AAYD;AAED,OAAO,MAAMI,KAAK,GAAG,CAACV,IAAD,EAAOW,OAAP,KAAmB,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAY,GAAEjB,UAAW,YAAzB,EAAsCG,IAAtC,EAA4C;AAC5De,MAAAA,eAAe,EAAE;AAD2C,KAA5C,CAAlB;AAGAJ,IAAAA,OAAO,CAACK,IAAR,CAAa,OAAb;AACA,UAAMJ,QAAQ,CAAC;AACbJ,MAAAA,IAAI,EAAEN,aADO;AAEbO,MAAAA,OAAO,EAAEI,GAAG,CAACI;AAFA,KAAD,CAAd;AAIA,WAAO;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAP;AACD,GAVD,CAUE,MAAM;AACNN,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAEL;AADC,KAAD,CAAR;AAGA,WAAO;AAACe,MAAAA,OAAO,EAAE;AAAV,KAAP;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMC,MAAM,GAAIR,OAAD,IAAcC,QAAD,IAAc;AAC/CD,EAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACAJ,EAAAA,QAAQ,CAAC;AACPJ,IAAAA,IAAI,EAAEJ;AADC,GAAD,CAAR;AAGD,CALM","sourcesContent":["import axios from \"axios\";\nimport {backendUrl} from '../../config'\n\nconst initialState = {\n  authenticated: false,\n  user: [],\n};\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nconst LOGIN_FAILURE = \"LOGIN_FAILURE\";\nconst LOGOUT = \"USERS_LOGOUT\";\n\nexport default function userReducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { authenticated: true, user: action.user };\n    case LOGIN_SUCCESS:\n      return { authenticated: true, user: action.payload };\n    case LOGIN_FAILURE:\n      return { authenticated: false, user: [] };\n    case LOGOUT:\n      return { authenticated: false, user: [] };\n    default:\n      return state;\n  }\n}\n\nexport const login = (user, history) => async (dispatch) => {\n  try {\n    const res = await axios.post(`${backendUrl}/user/auth`, user, {\n      withCredentials: true,\n    });\n    history.push(\"/home\");\n    await dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    return {message: 'success'}\n  } catch {\n    dispatch({\n      type: LOGIN_FAILURE,\n    });\n    return {message: 'error'}\n  }\n};\n\nexport const logout = (history) => (dispatch) => {\n  history.push(\"/\");\n  dispatch({\n    type: LOGOUT,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}