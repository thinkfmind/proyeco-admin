{"ast":null,"code":"import React, { Component } from 'react';\nimport OverlayScrollbars from 'overlayscrollbars';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nclass OverlayScrollbarsComponent extends Component {\n  constructor(props) {\n    super(props);\n    this._osInstance = null;\n    this._osTargetRef = React.createRef();\n  }\n\n  osInstance() {\n    return this._osInstance;\n  }\n\n  osTarget() {\n    return this._osTargetRef.current || null;\n  }\n\n  componentDidMount() {\n    this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n    mergeHostClassNames(this._osInstance, this.props.className);\n  }\n\n  componentWillUnmount() {\n    if (OverlayScrollbars.valid(this._osInstance)) {\n      this._osInstance.destroy();\n\n      this._osInstance = null;\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (OverlayScrollbars.valid(this._osInstance)) {\n      this._osInstance.options(this.props.options);\n\n      if (prevProps.className !== this.props.className) {\n        mergeHostClassNames(this._osInstance, this.props.className);\n      }\n    }\n  }\n\n  render() {\n    const _a = this.props,\n          divProps = __rest(_a, [\"options\", \"extensions\", \"children\", \"className\"]);\n\n    return React.createElement(\"div\", Object.assign({\n      className: \"os-host\"\n    }, divProps, {\n      ref: this._osTargetRef\n    }), React.createElement(\"div\", {\n      className: \"os-resize-observer-host\"\n    }), React.createElement(\"div\", {\n      className: \"os-padding\"\n    }, React.createElement(\"div\", {\n      className: \"os-viewport\"\n    }, React.createElement(\"div\", {\n      className: \"os-content\"\n    }, this.props.children))), React.createElement(\"div\", {\n      className: \"os-scrollbar os-scrollbar-horizontal \"\n    }, React.createElement(\"div\", {\n      className: \"os-scrollbar-track\"\n    }, React.createElement(\"div\", {\n      className: \"os-scrollbar-handle\"\n    }))), React.createElement(\"div\", {\n      className: \"os-scrollbar os-scrollbar-vertical\"\n    }, React.createElement(\"div\", {\n      className: \"os-scrollbar-track\"\n    }, React.createElement(\"div\", {\n      className: \"os-scrollbar-handle\"\n    }))), React.createElement(\"div\", {\n      className: \"os-scrollbar-corner\"\n    }));\n  }\n\n}\n\nfunction mergeHostClassNames(osInstance, className) {\n  if (OverlayScrollbars.valid(osInstance)) {\n    const {\n      host\n    } = osInstance.getElements();\n    const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\n    const osClassNames = host.className.split(' ').filter(name => name.match(regex)).join(' ');\n    host.className = `${osClassNames} ${className || ''}`;\n  }\n}\n\nexport { OverlayScrollbarsComponent };","map":{"version":3,"sources":["../src/OverlayScrollbarsComponent.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { Component, RefObject } from 'react';\nimport OverlayScrollbars from \"overlayscrollbars\";\n\nexport interface OverlayScrollbarsComponentProps extends React.HTMLAttributes<HTMLDivElement> {\n    children?: any;\n    options?: OverlayScrollbars.Options;\n    extensions?: OverlayScrollbars.Extensions;\n}\nexport interface OverlayScrollbarsComponentState { }\n\nexport class OverlayScrollbarsComponent extends Component<OverlayScrollbarsComponentProps, OverlayScrollbarsComponentState> {\n    private _osInstance: OverlayScrollbars | null = null;\n    private _osTargetRef: RefObject<HTMLDivElement>;\n\n    constructor(props: OverlayScrollbarsComponentProps) {\n        super(props);\n        this._osTargetRef = React.createRef();\n    }\n\n    osInstance(): OverlayScrollbars | null {\n        return this._osInstance;\n    }\n\n    osTarget(): HTMLDivElement | null {\n        return this._osTargetRef.current || null;\n    }\n\n    componentDidMount() {\n        this._osInstance = OverlayScrollbars(this.osTarget(), this.props.options || {}, this.props.extensions);\n        mergeHostClassNames(this._osInstance, this.props.className);\n    }\n\n    componentWillUnmount() {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.destroy();\n            this._osInstance = null;\n        }\n    }\n\n    componentDidUpdate(prevProps: OverlayScrollbarsComponentProps) {\n        if (OverlayScrollbars.valid(this._osInstance)) {\n            this._osInstance.options(this.props.options);\n\n            if (prevProps.className !== this.props.className) {\n                mergeHostClassNames(this._osInstance, this.props.className);\n            }\n        }\n    }\n\n    render() {\n        const {\n            options,\n            extensions,\n            children,\n            className,\n            ...divProps\n        } = this.props;\n\n        return (\n            <div className=\"os-host\" {...divProps} ref={this._osTargetRef}>\n                <div className=\"os-resize-observer-host\"></div>\n                <div className=\"os-padding\">\n                    <div className=\"os-viewport\">\n                        <div className=\"os-content\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-horizontal \">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar os-scrollbar-vertical\">\n                    <div className=\"os-scrollbar-track\">\n                        <div className=\"os-scrollbar-handle\"></div>\n                    </div>\n                </div>\n                <div className=\"os-scrollbar-corner\"></div>\n            </div>\n        );\n    }\n}\n\nfunction mergeHostClassNames(osInstance: OverlayScrollbars, className: string) {\n    if (OverlayScrollbars.valid(osInstance)) {\n        const { host } = osInstance.getElements();\n        const regex = new RegExp(`(^os-host([-_].+|)$)|${osInstance.options().className.replace(/\\s/g, \"$|\")}$`, 'g');\n        const osClassNames = host.className.split(' ')\n            .filter(name => name.match(regex))\n            .join(' ');\n\n        host.className = `${osClassNames} ${className || ''}`;\n    }\n}"]},"metadata":{},"sourceType":"module"}